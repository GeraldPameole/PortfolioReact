---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import BackButton from '../../components/BackButton.astro';
import { calculateReadingTime, mapToStandardTheme, standardThemes } from '../../utils/themeUtils';

export async function getStaticPaths() {
	const articles = await getCollection('articles');
	return articles.map(article => ({
		params: { slug: article.slug },
		props: { article },
	}));
}

const { article } = Astro.props;
const { Content } = await article.render();
const theme = article.data.theme || (article.data.tags && article.data.tags.length > 0 ? article.data.tags[0] : "autre");
const standardTheme = mapToStandardTheme(theme);
const themeConfig = standardThemes[standardTheme];

// Métadonnées pour SEO
const pageTitle = `${article.data.title} | Blog`;
const pageDescription = article.data.description;
---

<BaseLayout 
	title={pageTitle} 
	description={pageDescription}
	customClass="bg-gradient-to-br from-gray-50 to-white dark:from-gray-900 dark:to-gray-800"
	fullWidth={true}
>
	<main class="mx-auto max-w-4xl px-4 sm:px-6 lg:px-8 py-12">
		<BackButton href="/blog" text="Retour aux articles" />
		
		<article class="content-typography prose-lg dark:prose-invert max-w-none">
			<header class="mb-12">
				<div class="flex items-center gap-4 mb-6">
					<span class={`px-4 py-2 rounded-full text-sm font-medium ${themeConfig.bg} ${themeConfig.text}`}>
						{themeConfig.label}
					</span>
					<time class="text-[#111827] dark:text-gray-400">
						{new Date(article.data.publishDate).toLocaleDateString('fr-FR', {
							year: 'numeric',
							month: 'long',
							day: 'numeric'
						})}
					</time>
					<span class="text-[#111827] dark:text-gray-400 flex items-center">
						<i class="fas fa-clock mr-1"></i>
						{calculateReadingTime(article.body)} min de lecture
					</span>
				</div>
				
				<h1 class="text-4xl font-bold mb-6">{article.data.title}</h1>
				
				{article.data.image && (
					<div class="relative h-96 rounded-xl overflow-hidden mb-8">
						<img 
							src={article.data.image} 
							alt={article.data.title} 
							class="w-full h-full object-cover"
						/>
					</div>
				)}
				
				<p class="text-xl text-[#111827] dark:text-gray-300 mb-8">{article.data.description}</p>
				
				{article.data.tags && article.data.tags.length > 0 && (
					<div class="flex flex-wrap gap-2">
						{article.data.tags.map((tag: string) => (
							<span class="px-3 py-1 bg-gray-100 dark:bg-gray-800 text-[#111827] dark:text-gray-300 rounded-full text-sm">
								#{tag}
							</span>
						))}
					</div>
				)}
			</header>
			
			<div class="content">
				<Content />
			</div>
		</article>
	</main>
</BaseLayout>

<style>
	/* Styles unifiés gérés par content.css */
	
	.prose h2 {
		@apply text-3xl font-bold mt-12 mb-6;
	}
	
	.prose h3 {
		@apply text-2xl font-bold mt-8 mb-4;
	}
	
	.prose p {
		@apply mb-6 leading-relaxed;
	}
	
	.prose ul, .prose ol {
		@apply mb-6 pl-6;
	}
	
	.prose li {
		@apply mb-2;
	}
	
	.prose code {
		@apply bg-gray-100 dark:bg-gray-800 px-2 py-1 rounded text-sm;
	}
	
	.prose pre {
		@apply bg-gray-100 dark:bg-gray-800 p-4 rounded-lg overflow-x-auto mb-6;
	}
	
	.prose blockquote {
		@apply border-l-4 border-indigo-500 pl-4 italic my-6;
	}
	
	.prose img {
		@apply rounded-lg my-6;
	}
</style>

<script defer is:inline>
  // Ajout de Font Awesome
  if (!document.querySelector('#font-awesome')) {
    const link = document.createElement('link');
    link.id = 'font-awesome';
    link.rel = 'stylesheet';
    link.href = 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css';
    document.head.appendChild(link);
  }
</script> 