---
import { getCollection } from 'astro:content';
import BackToTop from '../../components/BackToTop.astro';
import CallToAction from '../../components/CallToAction.astro';
import PageBanner from '../../components/PageBanner.astro';
import BaseLayout from '../../layouts/BaseLayout.astro';
import { calculateReadingTime, mapToStandardTheme, standardThemes, type ThemeKey } from '../../utils/themeUtils';

// R√©cup√©ration des articles et des livres
const articlesCollection = await getCollection('articles');
const allBooks = await getCollection('books');

// Tri des articles par date de publication (du plus r√©cent au plus ancien)
const sortedArticles = articlesCollection.sort((a, b) => {
	return new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime();
});

// Tri des livres par note (du mieux not√© au moins bien not√©)
const sortedBooks = allBooks.sort((a, b) => {
	return (b.data.note || 0) - (a.data.note || 0);
});

// Regroupement des articles par th√®me standardis√©
const articlesByTheme: Record<ThemeKey, typeof articlesCollection[number][]> = {} as Record<ThemeKey, typeof articlesCollection[number][]>;
sortedArticles.forEach(article => {
	// Utiliser le champ theme s'il existe, sinon utiliser le premier tag
	const theme = article.data.theme || (article.data.tags && article.data.tags.length > 0 ? article.data.tags[0] : "non-classe");
	const standardTheme = mapToStandardTheme(theme);
	
	if (!articlesByTheme[standardTheme]) {
		articlesByTheme[standardTheme] = [];
	}
	
	articlesByTheme[standardTheme].push(article);
});

// Type pour un article ou un livre avec th√®me standardis√©
type WithTheme<T> = T & { originalTheme: string; standardTheme: ThemeKey };

// Regroupement des ouvrages par th√®me standardis√©
const booksByTheme = sortedBooks.reduce<Record<ThemeKey, WithTheme<typeof allBooks[number]>[]>>((acc, book) => {
	// D√©terminer le th√®me original
	const originalTheme = book.data.category || (book.data.tags?.[0]) || 'Litt√©rature g√©n√©rale';
	
	// Mapper vers un th√®me standardis√©
	const standardTheme = mapToStandardTheme(originalTheme);
	
	// Ajouter le th√®me original comme propri√©t√© pour l'afficher sur la carte
	const bookWithTheme: WithTheme<typeof allBooks[number]> = {
		...book,
		originalTheme: originalTheme,
		standardTheme: standardTheme
	};
	
	if (!acc[standardTheme]) {
		acc[standardTheme] = [];
	}
	acc[standardTheme].push(bookWithTheme);
	return acc;
}, {} as Record<ThemeKey, WithTheme<typeof allBooks[number]>[]>);

// Obtenir tous les th√®mes uniques (articles + livres)
const allThemes = [...new Set([
	...Object.keys(articlesByTheme) as ThemeKey[],
	...Object.keys(booksByTheme) as ThemeKey[]
])];

// Pour chaque th√®me, compter le nombre total d'√©l√©ments (articles + livres)
const themesWithCount = allThemes.map(theme => {
	const articleCount = articlesByTheme[theme]?.length || 0;
	const bookCount = booksByTheme[theme]?.length || 0;
	const totalCount = articleCount + bookCount;
	
	return {
		name: theme,
		articleCount,
		bookCount,
		totalCount,
		icon: standardThemes[theme]?.icon || "fas fa-file-alt",
		color: standardThemes[theme]?.color?.text || "text-gray-600",
		bg: standardThemes[theme]?.color?.bg || "bg-gray-100 dark:bg-gray-900/30",
		gradient: standardThemes[theme]?.color?.gradient || "from-gray-500 to-gray-700"
	};
}).sort((a, b) => b.totalCount - a.totalCount);

function formatDate(date: Date) {
	return date.toLocaleDateString('fr-FR', {
		year: 'numeric',
		month: 'long',
		day: 'numeric'
	});
}

// M√©tadonn√©es pour SEO
const pageTitle = "Th√©matiques | Ressources par domaine d'expertise";
const pageDescription = "Explorez ma collection d'articles et ressources organis√©s par domaine d'expertise, du d√©veloppement web √† l'intelligence artificielle.";
---

<BaseLayout 
	title={pageTitle} 
	description={pageDescription}
	customClass="bg-gradient-to-br from-gray-50 to-white dark:from-gray-900 dark:to-gray-800"
>
	<main class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 py-12">
		<!-- Banni√®re de page -->
		<PageBanner 
			title="Articles par Th√©matique"
			description="Explorez mes publications class√©es par domaine d'expertise"
			backgroundGradient="from-indigo-600 to-blue-700"
			icon="üìö"
		/>
		
		<!-- Filtres de navigation -->
		<section class="mb-10 mt-12">
			<h2 class="sr-only">Filtres de navigation</h2>
			<div class="flex overflow-x-auto pb-4 hide-scrollbar">
				<div class="flex space-x-2">
					{themesWithCount.map(theme => (
						<a href={`#${theme.name}`} 
							class={`px-4 py-2 rounded-full ${theme.bg} ${theme.color} whitespace-nowrap hover:shadow-md transition-all duration-300 flex items-center`}>
							<i class={`${theme.icon} mr-2`}></i>
							{standardThemes[theme.name]?.label || theme.name} ({theme.totalCount})
						</a>
					))}
				</div>
			</div>
		</section>
		
		<!-- Statistiques -->
		<section class="mb-16">
			<div class="grid grid-cols-2 md:grid-cols-4 gap-4 lg:gap-6">
				<div class="bg-white dark:bg-gray-800 rounded-xl shadow-md p-6 transform transition-all duration-300 hover:shadow-lg hover:-translate-y-1">
					<div class="flex items-center justify-between mb-4">
						<span class="text-3xl text-indigo-600 dark:text-indigo-400">
							<i class="fas fa-newspaper"></i>
						</span>
						<span class="text-4xl font-bold text-gray-800 dark:text-white">{articlesCollection.length}</span>
					</div>
					<p class="text-gray-600 dark:text-gray-300 text-sm">Articles publi√©s</p>
				</div>
				
				<div class="bg-white dark:bg-gray-800 rounded-xl shadow-md p-6 transform transition-all duration-300 hover:shadow-lg hover:-translate-y-1">
					<div class="flex items-center justify-between mb-4">
						<span class="text-3xl text-indigo-600 dark:text-indigo-400">
							<i class="fas fa-book"></i>
						</span>
						<span class="text-4xl font-bold text-gray-800 dark:text-white">{allBooks.length}</span>
					</div>
					<p class="text-gray-600 dark:text-gray-300 text-sm">Livres recommand√©s</p>
				</div>
				
				<div class="bg-white dark:bg-gray-800 rounded-xl shadow-md p-6 transform transition-all duration-300 hover:shadow-lg hover:-translate-y-1">
					<div class="flex items-center justify-between mb-4">
						<span class="text-3xl text-indigo-600 dark:text-indigo-400">
							<i class="fas fa-tags"></i>
						</span>
						<span class="text-4xl font-bold text-gray-800 dark:text-white">{allThemes.length}</span>
					</div>
					<p class="text-gray-600 dark:text-gray-300 text-sm">Th√©matiques</p>
				</div>
				
				<div class="bg-white dark:bg-gray-800 rounded-xl shadow-md p-6 transform transition-all duration-300 hover:shadow-lg hover:-translate-y-1">
					<div class="flex items-center justify-between mb-4">
						<span class="text-3xl text-indigo-600 dark:text-indigo-400">
							<i class="fas fa-clock"></i>
						</span>
						<span class="text-4xl font-bold text-gray-800 dark:text-white">
							{Math.round(articlesCollection.reduce((acc, article) => acc + calculateReadingTime(article.body), 0) / articlesCollection.length)}
						</span>
					</div>
					<p class="text-gray-600 dark:text-gray-300 text-sm">Min. de lecture en moyenne</p>
				</div>
			</div>
		</section>
		
		<!-- Sections des th√®mes -->
		{themesWithCount.map(theme => (
			<section id={theme.name} class="mb-16 scroll-mt-24">
				<!-- En-t√™te de section avec effet visuel -->
				<div class={`relative overflow-hidden rounded-xl mb-8 bg-gradient-to-r ${theme.gradient} h-32`}>
					<div class="absolute inset-0 z-0 opacity-20">
						<div class="grid grid-cols-6 grid-rows-3 gap-1 h-full w-full">
							{Array.from({ length: 6 * 3 }).map((_, i) => (
								<div class="bg-white/5 rounded"></div>
							))}
						</div>
					</div>
					<div class="absolute inset-0 flex items-center">
						<div class="px-8 py-6 text-white">
							<h2 class="text-3xl font-bold text-white mb-1 flex items-center">
								<i class={`${theme.icon} mr-3`}></i>
								{standardThemes[theme.name]?.label || theme.name}
							</h2>
							<p class="text-white/80">
								{theme.articleCount} article{theme.articleCount > 1 ? 's' : ''} ‚Ä¢ 
								{theme.bookCount} livre{theme.bookCount > 1 ? 's' : ''}
							</p>
						</div>
					</div>
				</div>
				
				<!-- Articles -->
				{articlesByTheme[theme.name as ThemeKey] && articlesByTheme[theme.name as ThemeKey].length > 0 && (
					<div class="mb-10">
						<h3 class="text-xl font-semibold mb-6 text-gray-800 dark:text-white flex items-center">
							<i class="fas fa-newspaper text-indigo-600 dark:text-indigo-400 mr-2"></i>
							Articles
						</h3>
						
						<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
							{articlesByTheme[theme.name as ThemeKey].map(article => (
								<a href={`/blog/${article.slug}`} class="group">
									<article class="h-full bg-white dark:bg-gray-700 rounded-xl shadow-md overflow-hidden transform transition-all duration-300 group-hover:shadow-lg group-hover:-translate-y-1">
										<div class="relative h-48 overflow-hidden">
											{article.data.image ? (
												<img 
													src={article.data.image} 
													alt={article.data.title} 
													class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-110"
												/>
											) : (
												<div class={`w-full h-full bg-gradient-to-r ${theme.gradient} flex items-center justify-center`}>
													<i class={`${theme.icon} text-white text-3xl`}></i>
												</div>
											)}
											<div class="absolute bottom-0 left-0 right-0 p-4 bg-gradient-to-t from-black/70 to-transparent">
												<div class="flex items-center text-white text-xs">
													<span class="flex items-center">
														<i class="fas fa-calendar-alt mr-1"></i>
														{formatDate(article.data.publishDate)}
													</span>
													<span class="mx-2">‚Ä¢</span>
													<span class="flex items-center">
														<i class="fas fa-clock mr-1"></i>
														{calculateReadingTime(article.body)} min
													</span>
												</div>
											</div>
										</div>
										<div class="p-5">
											<h4 class="text-lg font-bold mb-3 text-gray-800 dark:text-white group-hover:text-indigo-600 dark:group-hover:text-indigo-400 transition-colors line-clamp-2">
												{article.data.title}
											</h4>
											<p class="text-gray-600 dark:text-gray-300 text-sm mb-4 line-clamp-3">
												{article.data.description}
											</p>
											<div class="pt-3 border-t border-gray-100 dark:border-gray-700 flex justify-between">
												<div class="flex flex-wrap gap-2">
													{article.data.tags && article.data.tags.slice(0, 2).map((tag: string) => (
														<span class="px-2 py-1 bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 rounded text-xs">
															#{tag}
														</span>
													))}
												</div>
												<span class="text-indigo-600 dark:text-indigo-400 inline-flex items-center text-sm font-medium group-hover:translate-x-1 transition-transform duration-300">
													Lire
													<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
														<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
													</svg>
												</span>
											</div>
										</div>
									</article>
								</a>
							))}
						</div>
					</div>
				)}
				
				<!-- Livres -->
				{booksByTheme[theme.name as ThemeKey] && booksByTheme[theme.name as ThemeKey].length > 0 && (
					<div>
						<h3 class="text-xl font-semibold mb-6 text-gray-800 dark:text-white flex items-center">
							<i class="fas fa-book text-indigo-600 dark:text-indigo-400 mr-2"></i>
							Livres recommand√©s
						</h3>
						
						<div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
							{booksByTheme[theme.name as ThemeKey].map(book => (
								<a href={`/blog/books/${book.slug}`} class="group">
									<article class="h-full bg-white dark:bg-gray-700 rounded-xl shadow-md overflow-hidden transform transition-all duration-300 group-hover:shadow-lg group-hover:-translate-y-1">
										<div class="relative h-64 overflow-hidden">
											{book.data.cover ? (
												<img 
													src={book.data.cover} 
													alt={book.data.title} 
													class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-110"
												/>
											) : (
												<div class="w-full h-full bg-gradient-to-r from-indigo-500 to-purple-600 flex items-center justify-center">
													<i class="fas fa-book text-white text-4xl"></i>
												</div>
											)}
											{book.data.note && (
												<div class="absolute top-3 right-3">
													<span class="px-3 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-300">
														{Array.from({ length: Math.round(book.data.note) }).map(() => '‚òÖ').join('')}
													</span>
												</div>
											)}
										</div>
										<div class="p-5">
											<h4 class="text-lg font-bold mb-1 text-gray-800 dark:text-white group-hover:text-indigo-600 dark:group-hover:text-indigo-400 transition-colors line-clamp-1">
												{book.data.title}
											</h4>
											<p class="text-indigo-600 dark:text-indigo-400 text-sm mb-3">
												{book.data.author}
											</p>
											<p class="text-gray-600 dark:text-gray-300 text-sm line-clamp-3">
												{book.data.description}
											</p>
										</div>
									</article>
								</a>
							))}
						</div>
					</div>
				)}
			</section>
		))}
		
		<!-- Call to Action -->
		<section class="mt-16">
			<CallToAction 
				title="Des questions sur mes publications ?"
				description="N'h√©sitez pas √† me contacter pour discuter de mes articles, partager vos id√©es ou me proposer des sujets."
				buttonText="Me contacter"
				buttonLink="/contact"
				buttonStyle="primary"
				icon="chat"
			/>
		</section>
	</main>
	
	<BackToTop />
</BaseLayout>

<style>
	.hide-scrollbar {
		-ms-overflow-style: none;
		scrollbar-width: none;
	}
	
	.hide-scrollbar::-webkit-scrollbar {
		display: none;
	}
	
	.line-clamp-1 {
		display: -webkit-box;
		-webkit-line-clamp: 1;
		-webkit-box-orient: vertical;
		overflow: hidden;
	}
	
	.line-clamp-2 {
		display: -webkit-box;
		-webkit-line-clamp: 2;
		-webkit-box-orient: vertical;
		overflow: hidden;
	}
	
	.line-clamp-3 {
		display: -webkit-box;
		-webkit-line-clamp: 3;
		-webkit-box-orient: vertical;
		overflow: hidden;
	}
</style>

<script defer is:inline>
  // Ajout de Font Awesome
  if (!document.querySelector('#font-awesome')) {
    const link = document.createElement('link');
    link.id = 'font-awesome';
    link.rel = 'stylesheet';
    link.href = 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css';
    document.head.appendChild(link);
  }
  
  // Animation pour les √©l√©ments au scroll
  document.addEventListener('DOMContentLoaded', () => {
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate-fade-in');
          observer.unobserve(entry.target);
        }
      });
    }, { threshold: 0.1 });
    
    document.querySelectorAll('section').forEach(section => {
      observer.observe(section);
    });
  });
</script> 