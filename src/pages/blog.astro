---
import { getCollection } from 'astro:content';
import ThemeGrid from '../components/ThemeGrid.astro';
import CallToAction from '../components/CallToAction.astro';
import SearchBar from '../components/SearchBar.astro';
import BaseLayout from '../layouts/BaseLayout.astro';
import { calculateReadingTime, standardThemes, type ThemeKey } from '../utils/themeUtils';
import BackToTop from '../components/BackToTop.astro';
import ThemeBadge from '../components/ThemeBadge.astro';
import ArticleCard from '../components/ArticleCard.astro';
import '../styles/blog.css';

// Récupération des articles et livres
const articles = await getCollection('articles');
const books = await getCollection('books');

// Tri des articles par date de publication (du plus récent au plus ancien)
const sortedArticles = articles.sort((a, b) => 
	new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime()
);

// Statistiques du blog
const blogStats = [
	{ value: articles.length, label: "Articles publiés", icon: "fas fa-newspaper" },
	{ value: books.length, label: "Livres recommandés", icon: "fas fa-book" },
	{ value: Object.keys(standardThemes).length, label: "Catégories", icon: "fas fa-tags" },
	{ value: Math.round(articles.reduce((acc, article) => acc + calculateReadingTime(article.body), 0) / articles.length), label: "Min. de lecture en moyenne", icon: "fas fa-clock" }
];

// Articles en vedette (les 3 plus récents)
const featuredArticles = sortedArticles.slice(0, 3);
// Tous les autres articles
const remainingArticles = sortedArticles.slice(3);
---

<BaseLayout 
	title="Blog - Articles et Ressources" 
	description="Découvrez mes articles sur le développement, la technologie et la carrière tech."
	customClass="bg-gradient-to-br from-gray-50 to-white dark:from-gray-900 dark:to-gray-800"
	fullWidth={true}
>
	<main class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 py-12">
		<!-- En-tête de page -->
		<section class="py-16 md:py-24 bg-gradient-to-r from-indigo-600/5 to-violet-600/5 rounded-xl mb-12">
			<div class="max-w-3xl mx-auto text-center">
				<h1 class="text-4xl md:text-5xl font-bold mb-6 text-gray-800 dark:text-white">
					Blog & Articles
				</h1>
				<p class="text-xl text-gray-600 dark:text-gray-300 mb-8">
					Découvrez des articles sur le développement web, la technologie et l'évolution professionnelle
				</p>
				
				<!-- Barre de recherche -->
				<div class="max-w-2xl mx-auto">
					<SearchBar placeholder="Rechercher un article..." />
				</div>
			</div>
		</section>
		
		<!-- Statistiques du blog -->
		<section class="mb-16">
			<div class="grid grid-cols-2 md:grid-cols-4 gap-4">
				{blogStats.map(stat => (
					<div class="bg-white dark:bg-gray-800 rounded-xl shadow-md p-6 text-center">
						<div class="flex justify-center mb-4">
							<span class="w-12 h-12 bg-indigo-100 dark:bg-indigo-900/40 rounded-full flex items-center justify-center">
								<i class={`${stat.icon} text-indigo-600 dark:text-indigo-400 text-xl`}></i>
							</span>
						</div>
						<span class="block text-3xl font-bold text-gray-800 dark:text-white mb-1">{stat.value}</span>
						<span class="text-sm text-gray-600 dark:text-gray-400">{stat.label}</span>
					</div>
				))}
			</div>
		</section>
		
		<!-- Articles en vedette -->
		<section class="mb-20">
			<h2 class="text-3xl font-bold mb-8 text-gray-800 dark:text-white">Articles en vedette</h2>
			
			<div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
				{featuredArticles.map((article, index) => (
					<ArticleCard article={article} />
				))}
			</div>
		</section>
		
		<!-- Parcourir par thèmes -->
		<section class="mb-16">
			<div class="flex items-center justify-between mb-8">
				<h2 class="text-3xl font-bold text-gray-800 dark:text-white">Parcourir par thème</h2>
				<a href="/blog/themes" class="text-indigo-600 dark:text-indigo-400 font-medium inline-flex items-center">
					Voir tous les thèmes
					<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
					</svg>
				</a>
			</div>
			
			<div class="flex flex-wrap gap-3 mb-8">
				{Object.keys(standardThemes).map(theme => (
					<a href={`/blog/themes/${theme}`}>
						<ThemeBadge theme={theme} />
					</a>
				))}
			</div>
		</section>
		
		<!-- Articles par thème -->
		<ThemeGrid 
			articles={remainingArticles} 
			title="Tous les articles par thème" 
			columns={3}
		/>
		
		<!-- Call to action -->
		<section class="mt-16">
			<CallToAction
				title="Vous souhaitez travailler ensemble ?"
				description="N'hésitez pas à me contacter pour discuter de votre projet ou pour toute question."
				buttonText="Me contacter"
				buttonLink="/contact"
			/>
		</section>
	</main>
	
	<BackToTop />
</BaseLayout>

<style>
	.line-clamp-1 {
		display: -webkit-box;
		-webkit-line-clamp: 1;
		-webkit-box-orient: vertical;
		overflow: hidden;
	}
	
	.line-clamp-2 {
		display: -webkit-box;
		-webkit-line-clamp: 2;
		-webkit-box-orient: vertical;
		overflow: hidden;
	}
	
	.line-clamp-3 {
		display: -webkit-box;
		-webkit-line-clamp: 3;
		-webkit-box-orient: vertical;
		overflow: hidden;
	}
</style>

<script is:inline>
  // Ajout de Font Awesome
  if (!document.querySelector('#font-awesome')) {
    const link = document.createElement('link');
    link.id = 'font-awesome';
    link.rel = 'stylesheet';
    link.href = 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css';
    document.head.appendChild(link);
  }
  
  // Animation pour les éléments au scroll
  document.addEventListener('DOMContentLoaded', function() {
    const observer = new IntersectionObserver(function(entries) {
      entries.forEach(function(entry) {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate-fade-in');
          observer.unobserve(entry.target);
        }
      });
    }, { threshold: 0.1 });
    
    document.querySelectorAll('section').forEach(function(section) {
      observer.observe(section);
    });
    
    // Gestion des erreurs d'images
    document.querySelectorAll('img').forEach(function(img) {
      img.addEventListener('error', function() {
        // Remplacer l'image par une image de placeholder ou une div de fallback
        const fallbackSrc = '/placeholder-article.webp';
        if (this.src !== fallbackSrc) {
          this.src = fallbackSrc;
        } else {
          // Si même l'image de fallback échoue, remplacer par un div coloré
          const div = document.createElement('div');
          div.className = 'w-full h-full bg-gradient-to-r from-indigo-500 to-blue-500 flex items-center justify-center';
          div.innerHTML = '<i class="fas fa-newspaper text-white text-4xl"></i>';
          this.parentNode.replaceChild(div, this);
        }
      });
    });
    
    // Gestion des déconnexions du serveur
    let reconnectAttempts = 0;
    const maxReconnectAttempts = 5;
    
    // Fonction pour se reconnecter au serveur HMR
    function reconnectToServer() {
      if (reconnectAttempts < maxReconnectAttempts) {
        console.log(`Tentative de reconnexion au serveur (${reconnectAttempts + 1}/${maxReconnectAttempts})...`);
        
        // Simuler un reload après un délai
        setTimeout(function() {
          window.location.reload();
        }, 3000);
        
        reconnectAttempts++;
      } else {
        console.error("Impossible de se reconnecter au serveur après plusieurs tentatives.");
      }
    }
    
    // Écouter les événements de déconnexion
    window.addEventListener('offline', function() {
      console.warn('Connexion au réseau perdue.');
    });
    
    window.addEventListener('online', function() {
      console.log('Connexion au réseau rétablie, tentative de reconnexion...');
      reconnectToServer();
    });
  });
</script> 