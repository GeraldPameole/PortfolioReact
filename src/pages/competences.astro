---
import BaseLayout from '../layouts/BaseLayout.astro';
import { motion } from "framer-motion";
import Grid from '../components/Grid.astro';
import Hero from '../components/Hero.astro';
import ContactCTA from '../components/ContactCTA.astro';
import Icon from '../components/Icon.astro';

// Définition du composant Motion pour Astro
const MotionDiv = motion.div;
const MotionLi = motion.li;

type IconType = "code" | "strategy" | "terminal-window" | "paper-plane-tilt" | "microphone-stage";

const competences: { theme: string; icon: IconType; description: string; skills: string[] }[] = [
    {
        theme: "Management Commercial",
        icon: "strategy",
        description: "Direction et développement d'équipes commerciales performantes, avec une approche orientée résultats et développement des talents.",
        skills: [
            "Leadership & Coaching",
            "Stratégie commerciale",
            "KPIs & Performance",
            "Négociation complexe",
            "Business Development"
        ]
    },
    {
        theme: "Développement Web",
        icon: "code",
        description: "Création d'applications web modernes et responsives, en utilisant les dernières technologies pour offrir une expérience utilisateur optimale.",
        skills: [
            "HTML/CSS/JavaScript",
            "React/Vue.js/Angular",
            "Node.js/Express",
            "API REST/GraphQL",
            "Git/GitHub"
        ]
    },
    {
        theme: "Gestion de Projet",
        icon: "terminal-window",
        description: "Pilotage de projets complexes avec une approche agile, en assurant la coordination des équipes et l'atteinte des objectifs dans les délais.",
        skills: [
            "Méthodologies Agiles",
            "Gestion des risques",
            "Planification stratégique",
            "Budgétisation",
            "Management d'équipe"
        ]
    },
    {
        theme: "Marketing Digital",
        icon: "paper-plane-tilt",
        description: "Élaboration et mise en œuvre de stratégies marketing digitales pour accroître la visibilité en ligne et générer de la croissance.",
        skills: [
            "SEO/SEM",
            "Analytics & KPIs",
            "Marketing automation",
            "Stratégie de contenu",
            "Social Media"
        ]
    },
    {
        theme: "Formation",
        icon: "microphone-stage",
        description: "Transmission des connaissances et développement des compétences à travers des programmes de formation personnalisés et innovants.",
        skills: [
            "Conception pédagogique",
            "Animation de sessions",
            "E-learning",
            "Évaluation des acquis",
            "Coaching",
            "Tutorat"
        ]

    }
];
---

<BaseLayout title="Mes Compétences" description="Découvrez mes compétences professionnelles par domaine d'expertise">
    <div class="stack gap-20">
        <main class="wrapper stack gap-8">
            <Hero
                title="Mes Compétences"
                tagline="Découvrez mes domaines d'expertise et compétences techniques"
                align="start"
            />
            
            <div class="skills-grid">
                {competences.map((domain, index) => (
                    <div class="skill-card" data-index={index}>
                        <div class="skill-header">
                            <Icon icon={domain.icon} size="2.5rem" gradient />
                            <h2>{domain.theme}</h2>
                        </div>
                        <p class="skill-description">{domain.description}</p>
                        <ul class="skill-list">
                            {domain.skills.map((skill, skillIndex) => (
                                <li class="skill-item" data-index={skillIndex}>
                                    {skill}
                                </li>
                            ))}
                        </ul>
                    </div>
                ))}
            </div>
        </main>
        <ContactCTA />
    </div>
</BaseLayout>

<style>
    .skills-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 2rem;
        padding: 0;
    }

    .skill-card {
        border: 1px solid var(--gray-800);
        border-radius: 0.5rem;
        padding: 1.5rem;
        background-color: var(--gray-999);
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        opacity: 0;
        transform: translateY(20px);
        animation: fadeInUp 0.5s ease forwards;
        animation-delay: calc(var(--index) * 0.2s);
    }

    .skill-card:hover {
        transform: translateY(-5px);
        box-shadow: var(--shadow-md);
    }

    .skill-header {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 1.5rem;
    }

    .skill-header h2 {
        font-size: var(--text-xl);
        color: var(--gray-0);
    }

    .skill-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .skill-item {
        padding: 0.5rem 0;
        color: var(--gray-300);
        border-left: 2px solid var(--accent-regular);
        padding-left: 1rem;
        margin: 0.5rem 0;
        transition: all 0.2s ease-in-out;
        opacity: 0;
        transform: translateX(-20px);
        animation: fadeInLeft 0.5s ease forwards;
        animation-delay: calc((var(--card-index) * 0.2s) + (var(--index) * 0.1s));
    }

    .skill-item:hover {
        color: var(--gray-0);
        border-left-color: var(--gradient-stop-2);
        padding-left: 1.5rem;
    }

    @media (min-width: 50em) {
        .skills-grid {
            grid-template-columns: repeat(2, 1fr);
        }
    }

    @keyframes fadeInUp {
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @keyframes fadeInLeft {
        to {
            opacity: 1;
            transform: translateX(0);
        }
    }
</style>

<script>
    // Initialisation des animations
    function initAnimations() {
        const cards = document.querySelectorAll('.skill-card');
        cards.forEach((card, cardIndex) => {
            (card as HTMLElement).style.setProperty('--index', cardIndex.toString());
            
            const items = card.querySelectorAll('.skill-item');
            items.forEach((item, itemIndex) => {
                (item as HTMLElement).style.setProperty('--card-index', cardIndex.toString());
                (item as HTMLElement).style.setProperty('--index', itemIndex.toString());
            });
        });
    }

    // Animation au scroll
    function initScrollAnimation() {
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('visible');
                }
            });
        }, {
            threshold: 0.1
        });

        document.querySelectorAll('.skill-card').forEach((card) => {
            observer.observe(card);
        });
    }

    // Exécution après le chargement du DOM
    document.addEventListener('DOMContentLoaded', () => {
        initAnimations();
        initScrollAnimation();
    });
</script>
