---
import { getCollection } from 'astro:content';
import BackToTop from '../components/BackToTop.astro';
import CallToAction from '../components/CallToAction.astro';
import BaseLayout from '../layouts/BaseLayout.astro';

// Récupération des projets
const projects = await getCollection('work');

// Tri des projets par date de publication (du plus récent au plus ancien)
const sortedProjects = projects.sort((a, b) => {
	return new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime();
});

// Grouper les projets par domaine d'expertise
const projectsByDomain = sortedProjects.reduce((acc, project) => {
	const domain = project.data.domain || 
		(project.data.technologies && project.data.technologies.length > 0 
			? project.data.technologies[0] 
			: 'Autre');
	
	if (!acc[domain]) {
		acc[domain] = [];
	}
	
	acc[domain].push(project);
	return acc;
}, {} as Record<string, typeof projects>);

// Coloration par domaine
const domainColors = {
	'Développement Web': { color: 'indigo', icon: 'fas fa-laptop-code', bg: 'bg-indigo-100', text: 'text-indigo-800' },
	'Mobile': { color: 'blue', icon: 'fas fa-mobile-alt', bg: 'bg-blue-100', text: 'text-blue-800' },
	'Gestion de Projet': { color: 'purple', icon: 'fas fa-tasks', bg: 'bg-purple-100', text: 'text-purple-800' },
	'Formation': { color: 'green', icon: 'fas fa-graduation-cap', bg: 'bg-green-100', text: 'text-green-800' },
	'Qualité & Process': { color: 'amber', icon: 'fas fa-clipboard-check', bg: 'bg-amber-100', text: 'text-amber-800' },
	'Design': { color: 'rose', icon: 'fas fa-paint-brush', bg: 'bg-rose-100', text: 'text-rose-800' },
	'AI/ML': { color: 'violet', icon: 'fas fa-brain', bg: 'bg-violet-100', text: 'text-violet-800' },
	'DevOps': { color: 'orange', icon: 'fas fa-server', bg: 'bg-orange-100', text: 'text-orange-800' },
	'Cloud': { color: 'sky', icon: 'fas fa-cloud', bg: 'bg-sky-100', text: 'text-sky-800' },
	'Data': { color: 'teal', icon: 'fas fa-database', bg: 'bg-teal-100', text: 'text-teal-800' },
	'Autre': { color: 'gray', icon: 'fas fa-code', bg: 'bg-gray-100', text: 'text-gray-800' }
};

// Formater la date
function formatDate(dateString: string): string {
	return new Date(dateString).toLocaleDateString('fr-FR', {
		year: 'numeric',
		month: 'long'
	});
}

// Total des projets par domaine pour calculer les pourcentages
const totalProjects = sortedProjects.length;
const maxProjectsInDomain = Math.max(...Object.values(projectsByDomain).map(projects => projects.length));

// Obtenir les domaines clés (limités à 4 pour l'en-tête)
const keyDomains = Object.keys(projectsByDomain).sort((a, b) => 
    projectsByDomain[b].length - projectsByDomain[a].length
).slice(0, 4);

// Fonction pour obtenir un domaine de couleur par défaut si nécessaire
function getDomainColor(domain: string) {
    const color = domainColors[domain as keyof typeof domainColors];
    // Si le domaine n'existe pas dans domainColors, utilisez 'Autre'
    return color || domainColors['Autre'];
}
---

<BaseLayout
	title="Compétences & Projets | Gérald Paméole"
	description="Découvrez mes projets et réalisations en développement web, mobile et conseil."
>
	<div class="bg-gradient-to-b from-white to-gray-50 dark:from-gray-900 dark:to-gray-800 min-h-screen">
		<!-- En-tête -->
		<div class="pt-24 pb-16 px-4">
			<div class="max-w-4xl mx-auto text-center">
				<h1 class="text-4xl font-bold text-gray-900 dark:text-white mb-4">Compétences & Expertise</h1>
				<p class="text-lg text-gray-600 dark:text-gray-300 mb-8 max-w-3xl mx-auto">
					Plus de 15 ans d'expérience dans la gestion de projets télécoms, le développement web,
					et l'optimisation des processus d'entreprise.
				</p>
				
				<!-- Pills pour les domaines clés -->
				<div class="flex flex-wrap justify-center gap-2">
					{keyDomains.map(domain => {
						const domainColor = getDomainColor(domain);
						return (
							<a href={`#${domain.toLowerCase().replace(/[^\w]+/g, '-')}`} 
							   class={`px-4 py-2 rounded-full ${domainColor.bg} ${domainColor.text} dark:bg-opacity-20 dark:text-opacity-90 transition-all duration-300 hover:shadow-md`}>
								{domain}
							</a>
						);
					})}
				</div>
			</div>
		</div>
		
		<div class="max-w-7xl mx-auto px-4 pb-24">
			<!-- Projets par domaine -->
			{Object.entries(projectsByDomain).map(([domain, domainProjects]) => {
				const domainColor = getDomainColor(domain);
				const percentage = Math.round((domainProjects.length / maxProjectsInDomain) * 100);
				
				return (
					<section id={domain.toLowerCase().replace(/[^\w]+/g, '-')} class="mb-24 scroll-mt-16">
						<div class="grid grid-cols-1 md:grid-cols-3 gap-8 mb-8">
							<div class="md:col-span-1">
								<div class="flex items-center mb-3">
									<div class={`w-10 h-10 rounded-lg bg-${domainColor.color}-600 dark:bg-${domainColor.color}-500/30 flex items-center justify-center mr-3`}>
										<i class={`${domainColor.icon} text-white dark:text-${domainColor.color}-400`}></i>
									</div>
									<h2 class="text-xl font-bold text-gray-900 dark:text-white">{domain}</h2>
								</div>
								<p class="text-gray-600 dark:text-gray-300 mb-5 text-sm">
									{domain === 'Développement Web' && 'Conception et développement d\'applications web front-end et back-end.'}
									{domain === 'Gestion de Projet' && 'Expertise en pilotage de projets complexes dans le secteur des télécommunications.'}
									{domain === 'Formation' && 'Développement des compétences, coaching et formation des équipes et individus.'}
									{domain === 'Qualité & Process' && 'Mise en place et supervision de processus qualité et d\'amélioration continue.'}
									{domain === 'Mobile' && 'Développement d\'applications mobiles natives et cross-platform.'}
									{domain === 'Design' && 'Conception d\'interfaces utilisateur et expérience utilisateur.'}
									{domain === 'AI/ML' && 'Développement de solutions basées sur l\'intelligence artificielle et le machine learning.'}
									{domain === 'DevOps' && 'Mise en place de pipelines CI/CD et automatisation des déploiements.'}
									{domain === 'Cloud' && 'Architecture et déploiement de solutions cloud.'}
									{domain === 'Data' && 'Analyse et visualisation de données.'}
									{domain === 'Autre' && 'Projets spécifiques et technologies diverses.'}
								</p>
								
								{domainProjects.length > 0 && (
									<div class="mb-4">
										<div class="flex justify-between text-sm mb-1">
											<span class="text-gray-600 dark:text-gray-300">{domain}</span>
											<span class="text-gray-900 dark:text-white">{percentage}%</span>
										</div>
										<div class="h-2 w-full rounded-full bg-gray-200 dark:bg-gray-700">
											<div
												class={`h-2 rounded-full bg-${domainColor.color}-600 dark:bg-${domainColor.color}-500`}
												style={`width: ${percentage}%`}
											/>
										</div>
									</div>
								)}
							</div>
							
							<div class="md:col-span-2">
								<div class="grid grid-cols-1 sm:grid-cols-2 gap-5">
									{domainProjects.slice(0, 4).map(project => (
										<a href={`/work/${project.slug}`} class="group">
											<div class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden h-full transform transition-all duration-300 hover:shadow-lg hover:-translate-y-1 flex flex-col">
												{project.data.img ? (
													<div class="relative h-48 overflow-hidden">
														<img 
															src={project.data.img} 
															alt={project.data.img_alt || project.data.title}
															class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-105"
														/>
														<div class="absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
													</div>
												) : (
													<div class={`h-48 bg-gradient-to-r from-${domainColor.color}-500 to-${domainColor.color}-700 flex items-center justify-center`}>
														<h3 class="text-xl font-bold text-white p-4 text-center">{project.data.title}</h3>
													</div>
												)}
												
												<div class="p-5 flex-grow flex flex-col">
													<h3 class="font-semibold text-gray-900 dark:text-white mb-2 group-hover:text-${domainColor.color}-600 dark:group-hover:text-${domainColor.color}-400 transition-colors">
														{project.data.title}
													</h3>
													<p class="text-sm text-gray-600 dark:text-gray-300 mb-4 line-clamp-2 flex-grow">
														{project.data.description}
													</p>
													
													<div class="mt-auto">
														{project.data.technologies && (
															<div class="flex flex-wrap gap-1 mb-3">
																{project.data.technologies.slice(0, 3).map((tech: string) => (
																	<span class="text-xs px-2 py-1 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-full">
																		{tech}
																	</span>
																))}
																{project.data.technologies.length > 3 && (
																	<span class="text-xs px-2 py-1 bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-400 rounded-full">
																		+{project.data.technologies.length - 3}
																	</span>
																)}
															</div>
														)}
														
														<div class="flex items-center justify-between text-sm">
															<span class="text-gray-500 dark:text-gray-400">
																{formatDate(project.data.publishDate)}
															</span>
															<span class={`text-${domainColor.color}-600 dark:text-${domainColor.color}-400 flex items-center font-medium opacity-0 group-hover:opacity-100 transform translate-x-2 group-hover:translate-x-0 transition-all duration-300`}>
																Voir détails
																<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
																	<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
																</svg>
															</span>
														</div>
													</div>
												</div>
											</div>
										</a>
									))}
								</div>
								
								{domainProjects.length > 4 && (
									<div class="mt-4 text-right">
										<a href="#voir-tous-les-projets" class={`inline-flex items-center text-${domainColor.color}-600 dark:text-${domainColor.color}-400 hover:underline`}>
											Voir tous les projets ({domainProjects.length})
											<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
												<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
											</svg>
										</a>
									</div>
								)}
							</div>
						</div>
					</section>
				);
			})}
			
			<!-- Tous les projets -->
			<section id="voir-tous-les-projets" class="pt-8 mt-8 border-t border-gray-200 dark:border-gray-700">
				<h2 class="text-2xl font-bold text-center text-gray-900 dark:text-white mb-12">
					Tous les projets
				</h2>
				
				<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
					{sortedProjects.map(project => {
						const domain = project.data.domain || 
							(project.data.technologies && project.data.technologies.length > 0 
								? project.data.technologies[0] 
								: 'Autre');
						const domainColor = getDomainColor(domain);
						
						return (
							<a href={`/work/${project.slug}`} class="group">
								<article class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden h-full transform transition-all duration-300 hover:shadow-xl hover:-translate-y-2 flex flex-col">
									<div class="relative">
										{project.data.img ? (
											<div class="h-56 overflow-hidden">
												<img 
													src={project.data.img} 
													alt={project.data.img_alt || project.data.title}
													class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110"
												/>
												<div class="absolute inset-0 bg-gradient-to-t from-black/70 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300">
													<div class="absolute bottom-4 left-4 text-white font-semibold opacity-0 group-hover:opacity-100 transform translate-y-4 group-hover:translate-y-0 transition-all duration-300">
														Voir le projet
													</div>
												</div>
											</div>
										) : (
											<div class={`h-56 bg-gradient-to-r from-${domainColor.color}-500 to-${domainColor.color}-700 flex items-center justify-center`}>
												<h3 class="text-2xl font-bold text-white p-6 text-center">{project.data.title}</h3>
											</div>
										)}
										
										<!-- Badge domaine -->
										<div class="absolute top-3 left-3">
											<span class={`px-3 py-1 rounded-full text-xs font-medium ${domainColor.bg} ${domainColor.text} dark:bg-opacity-30 dark:text-opacity-90`}>
												{domain}
											</span>
										</div>
										
										<!-- Badge date -->
										<div class="absolute top-3 right-3">
											<span class="px-3 py-1 rounded-full text-xs font-medium bg-black/50 text-white backdrop-blur-sm">
												{formatDate(project.data.publishDate)}
											</span>
										</div>
									</div>
									
									<div class="p-6 flex-grow flex flex-col">
										<h3 class="text-xl font-bold text-gray-900 dark:text-white mb-2 group-hover:text-${domainColor.color}-600 dark:group-hover:text-${domainColor.color}-400 transition-colors">
											{project.data.title}
										</h3>
										
										<p class="text-sm text-gray-600 dark:text-gray-300 mb-6 flex-grow">
											{project.data.description}
										</p>
										
										{project.data.technologies && project.data.technologies.length > 0 && (
											<div class="mt-auto">
												<div class="flex flex-wrap gap-1 mb-2">
													{project.data.technologies.map((tech: string) => (
														<span class="text-xs px-2 py-1 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-full">
															{tech}
														</span>
													))}
												</div>
											</div>
										)}
										
										<div class="pt-4 mt-4 border-t border-gray-100 dark:border-gray-700 flex justify-end">
											<span class={`inline-flex items-center text-${domainColor.color}-600 dark:text-${domainColor.color}-400 font-medium group-hover:translate-x-1 transition-transform duration-300`}>
												Voir le projet
												<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
													<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
												</svg>
											</span>
										</div>
									</div>
								</article>
							</a>
						);
					})}
				</div>
			</section>
			
			<!-- Contact -->
			<div class="mt-16 text-center">
				<h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-6">Vous avez un projet en tête ?</h2>
				<p class="text-lg text-gray-600 dark:text-gray-300 mb-8 max-w-2xl mx-auto">
					N'hésitez pas à me contacter pour discuter de votre projet. Je serai ravi de vous aider à le concrétiser.
				</p>
				<a href="/contact" class="inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors duration-200">
					Me contacter
				</a>
			</div>
		</div>
	</div>
	
	<BackToTop />
</BaseLayout>

<script defer is:inline>
  // Ajout de Font Awesome s'il n'est pas déjà chargé
  if (!document.querySelector('#font-awesome')) {
    const link = document.createElement('link');
    link.id = 'font-awesome';
    link.rel = 'stylesheet';
    link.href = 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css';
    document.head.appendChild(link);
  }
  
  // Animation des barres de progression au scroll
  document.addEventListener('DOMContentLoaded', () => {
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate-bar');
          observer.unobserve(entry.target);
        }
      });
    }, { threshold: 0.1 });
    
    document.querySelectorAll('.rounded-full > div').forEach(bar => {
      observer.observe(bar);
    });
  });
</script>

<style>
/* Animation pour les barres de progression */
@keyframes growProgressBar {
  0% { width: 0; }
}

.animate-bar {
  animation: growProgressBar 1.5s ease-out forwards;
}

/* Classes utilitaires pour les couleurs */
.bg-indigo-100 { background-color: #e0e7ff; }
.bg-indigo-500 { background-color: #6366f1; }
.bg-indigo-600 { background-color: #4f46e5; }
.bg-indigo-700 { background-color: #4338ca; }
.text-indigo-400 { color: #818cf8; }
.text-indigo-600 { color: #4f46e5; }
.text-indigo-800 { color: #3730a3; }

.bg-blue-100 { background-color: #dbeafe; }
.bg-blue-500 { background-color: #3b82f6; }
.bg-blue-600 { background-color: #2563eb; }
.bg-blue-700 { background-color: #1d4ed8; }
.text-blue-400 { color: #60a5fa; }
.text-blue-600 { color: #2563eb; }
.text-blue-800 { color: #1e40af; }

.bg-purple-100 { background-color: #f3e8ff; }
.bg-purple-500 { background-color: #a855f7; }
.bg-purple-600 { background-color: #9333ea; }
.bg-purple-700 { background-color: #7e22ce; }
.text-purple-400 { color: #c084fc; }
.text-purple-600 { color: #9333ea; }
.text-purple-800 { color: #6b21a8; }

.bg-green-100 { background-color: #dcfce7; }
.bg-green-500 { background-color: #22c55e; }
.bg-green-600 { background-color: #16a34a; }
.bg-green-700 { background-color: #15803d; }
.text-green-400 { color: #4ade80; }
.text-green-600 { color: #16a34a; }
.text-green-800 { color: #166534; }

.bg-amber-100 { background-color: #fef3c7; }
.bg-amber-500 { background-color: #f59e0b; }
.bg-amber-600 { background-color: #d97706; }
.bg-amber-700 { background-color: #b45309; }
.text-amber-400 { color: #fbbf24; }
.text-amber-600 { color: #d97706; }
.text-amber-800 { color: #92400e; }

.bg-rose-100 { background-color: #ffe4e6; }
.bg-rose-500 { background-color: #f43f5e; }
.bg-rose-600 { background-color: #e11d48; }
.bg-rose-700 { background-color: #be123c; }
.text-rose-400 { color: #fb7185; }
.text-rose-600 { color: #e11d48; }
.text-rose-800 { color: #9f1239; }

.bg-violet-100 { background-color: #ede9fe; }
.bg-violet-500 { background-color: #8b5cf6; }
.bg-violet-600 { background-color: #7c3aed; }
.bg-violet-700 { background-color: #6d28d9; }
.text-violet-400 { color: #a78bfa; }
.text-violet-600 { color: #7c3aed; }
.text-violet-800 { color: #5b21b6; }

.bg-orange-100 { background-color: #ffedd5; }
.bg-orange-500 { background-color: #f97316; }
.bg-orange-600 { background-color: #ea580c; }
.bg-orange-700 { background-color: #c2410c; }
.text-orange-400 { color: #fb923c; }
.text-orange-600 { color: #ea580c; }
.text-orange-800 { color: #9a3412; }

.bg-sky-100 { background-color: #e0f2fe; }
.bg-sky-500 { background-color: #0ea5e9; }
.bg-sky-600 { background-color: #0284c7; }
.bg-sky-700 { background-color: #0369a1; }
.text-sky-400 { color: #38bdf8; }
.text-sky-600 { color: #0284c7; }
.text-sky-800 { color: #075985; }

.bg-teal-100 { background-color: #ccfbf1; }
.bg-teal-500 { background-color: #14b8a6; }
.bg-teal-600 { background-color: #0d9488; }
.bg-teal-700 { background-color: #0f766e; }
.text-teal-400 { color: #2dd4bf; }
.text-teal-600 { color: #0d9488; }
.text-teal-800 { color: #115e59; }

.bg-gray-100 { background-color: #f3f4f6; }
.bg-gray-500 { background-color: #6b7280; }
.bg-gray-600 { background-color: #4b5563; }
.bg-gray-700 { background-color: #374151; }
.text-gray-400 { color: #9ca3af; }
.text-gray-600 { color: #4b5563; }
.text-gray-800 { color: #1f2937; }

/* Styles pour les effets de survol et transitions */
.hide-scrollbar {
  -ms-overflow-style: none;
  scrollbar-width: none;
}

.hide-scrollbar::-webkit-scrollbar {
  display: none;
}
</style>
