---
import { getCollection } from 'astro:content';
import BackToTop from '../components/BackToTop.astro';
import BaseLayout from '../layouts/BaseLayout.astro';

// Récupération des projets
const projects = await getCollection('work');

// Tri des projets par date de publication (du plus récent au plus ancien)
const sortedProjects = projects.sort((a, b) => {
	return new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime();
});

// Définir les catégories de projets avec les mêmes codes couleurs que les domaines d'expertise
const projectCategories = {
	'gestion': {
		name: 'Gestion de Projet',
		icon: 'tasks',
		color: 'blue',
		colorClass: 'bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300',
		description: 'Pilotage de projets complexes, coordination d\'équipes et optimisation des processus.'
	},
	'developpement': {
		name: 'Développement Web',
		icon: 'code',
		color: 'green',
		colorClass: 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300',
		description: 'Applications web et solutions numériques innovantes pour des besoins variés.'
	},
	'qualite': {
		name: 'Qualité & Process',
		icon: 'clipboard-check',
		color: 'purple',
		colorClass: 'bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300',
		description: 'Mise en place et supervision de processus qualité et d\'amélioration continue.'
	},
	'formation': {
		name: 'Formation',
		icon: 'graduation-cap',
		color: 'red',
		colorClass: 'bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-300',
		description: 'Formations personnalisées et conseil en transformation digitale.'
	},
	'commercial': {
		name: 'Commercial',
		icon: 'handshake',
		color: 'amber',
		colorClass: 'bg-amber-100 text-amber-800 dark:bg-amber-900/30 dark:text-amber-300',
		description: 'Élaboration et mise en œuvre de stratégies commerciales pour atteindre les objectifs d\'entreprise.'
	}
};

// Grouper les projets par catégorie
const groupedProjects: Record<string, typeof projects> = {};
for (const category in projectCategories) {
	groupedProjects[category] = [];
}
groupedProjects['autre'] = [];

// Assigner les projets aux catégories appropriées
sortedProjects.forEach(project => {
	let assigned = false;
	if (project.data.technologies) {
		const techs = project.data.technologies.map((t: string) => t.toLowerCase());
		
		// Règles d'assignation basées sur les technologies
		if (techs.some((t: string) => ['react', 'vue', 'angular', 'javascript', 'typescript', 'html', 'css', 'web'].includes(t))) {
			groupedProjects['developpement'].push(project);
			assigned = true;
		} 
		else if (techs.some((t: string) => ['ios', 'android', 'react native', 'flutter', 'swift', 'kotlin', 'mobile'].includes(t))) {
			groupedProjects['developpement'].push(project);
			assigned = true;
		}
		else if (techs.some((t: string) => ['gestion', 'management', 'agile', 'scrum', 'kanban', 'jira'].includes(t))) {
			groupedProjects['gestion'].push(project);
			assigned = true;
		}
		else if (techs.some((t: string) => ['formation', 'learning', 'elearning', 'conseil', 'consulting'].includes(t))) {
			groupedProjects['formation'].push(project);
			assigned = true;
		}
		else if (techs.some((t: string) => ['vente', 'commercial', 'business', 'marketing', 'crm', 'client'].includes(t))) {
			groupedProjects['commercial'].push(project);
			assigned = true;
		}
		else if (techs.some((t: string) => ['qualité', 'process', 'amélioration', 'audit', 'conformité', 'kpi'].includes(t))) {
			groupedProjects['qualite'].push(project);
			assigned = true;
		}
	}
	
	// Si non assigné par technologie, utiliser le domaine s'il existe
	if (!assigned && project.data.domain) {
		const domain = project.data.domain.toLowerCase();
		if (domain.includes('web') || domain.includes('développement')) {
			groupedProjects['developpement'].push(project);
		} 
		else if (domain.includes('gestion') || domain.includes('projet')) {
			groupedProjects['gestion'].push(project);
		}
		else if (domain.includes('formation') || domain.includes('conseil')) {
			groupedProjects['formation'].push(project);
		}
		else if (domain.includes('commercial') || domain.includes('business') || domain.includes('vente')) {
			groupedProjects['commercial'].push(project);
		}
		else if (domain.includes('qualité') || domain.includes('process')) {
			groupedProjects['qualite'].push(project);
		}
		else {
			groupedProjects['autre'].push(project);
		}
	} 
	// Si toujours non assigné, mettre dans "autre"
	else if (!assigned) {
		groupedProjects['autre'].push(project);
	}
});

// Formater la date
function formatDate(dateString: string): string {
	return new Date(dateString).toLocaleDateString('fr-FR', {
		year: 'numeric',
		month: 'long'
	});
}
---

<BaseLayout
	title="Projets | Gérald Paméole"
	description="Découvrez mes projets et réalisations en développement web, gestion de projet, qualité & process, formation et commercial."
	customClass="projects-page"
	fullWidth={true}
>
	<!-- En-tête de page -->
	<section class="py-16 md:py-24 bg-gradient-to-r from-indigo-600/5 to-violet-600/5">
		<div class="w-full px-4 sm:px-6 lg:px-8">
			<div class="max-w-3xl mx-auto text-center">
				<h1 class="text-4xl md:text-5xl font-bold mb-6 text-gray-800 dark:text-white">
					Projets & Réalisations
				</h1>
				<p class="text-xl text-gray-600 dark:text-gray-300 mb-8">
					Une sélection de mes projets répartis par domaines d'expertise.
					Chaque projet illustre mon savoir-faire et mes compétences dans différents secteurs d'activité.
				</p>
				<!-- Pills de catégories -->
				<div class="flex flex-wrap justify-center gap-3">
					{Object.entries(projectCategories).map(([key, category]) => (
						<a href={`#${key}`} class={`px-4 py-2 rounded-full ${category.colorClass} transition-transform hover:scale-105`}>
							<i class={`fas fa-${category.icon} mr-2`}></i>{category.name}
						</a>
					))}
				</div>
			</div>
		</div>
	</section>

	<!-- Section des projets par catégorie (style similaire aux tableaux de compétences) -->
	<section class="py-16 bg-white dark:bg-gray-900">
		<div class="w-full px-4 sm:px-6 lg:px-8">
			{Object.entries(projectCategories).map(([key, category]) => (
				groupedProjects[key].length > 0 && (
					<div id={key} class="mb-20">
						<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg overflow-hidden transition-transform hover:scale-[1.01]">
							<div class="p-6 border-b border-gray-100 dark:border-gray-700">
								<div class="flex items-center gap-3 mb-4">
									<div class={`p-3 rounded-lg text-${category.color}-600 bg-${category.color}-100 dark:bg-gray-700`}>
										<span class="text-xl">
											<i class={`fas fa-${category.icon}`}></i>
										</span>
									</div>
									<h2 class="text-2xl font-bold text-gray-800 dark:text-white">
										{category.name}
									</h2>
								</div>
								<p class="text-gray-600 dark:text-gray-300 mt-1 mb-4">
									{category.description}
								</p>
								
								<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mt-6">
									{groupedProjects[key].map((project) => (
										<a href={`/projets/${project.slug}`} class="group">
											<div class="bg-white dark:bg-gray-700 rounded-lg shadow-md p-5 transform transition-all duration-300 hover:shadow-lg hover:-translate-y-1 flex flex-col h-full">
												<div class="relative h-40 mb-4 overflow-hidden rounded-lg">
													{project.data.img ? (
														<img 
															src={project.data.img} 
															alt={project.data.img_alt || project.data.title} 
															class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110"
														/>
													) : (
														<div class={`w-full h-full bg-${category.color}-600 dark:bg-${category.color}-700 flex items-center justify-center`}>
															<i class={`fas fa-${category.icon} text-white text-3xl`}></i>
														</div>
													)}
													<div class="absolute top-2 right-2">
														<span class="text-xs px-2 py-1 rounded-full bg-black/50 text-white backdrop-blur-sm">
															{formatDate(project.data.publishDate)}
														</span>
													</div>
												</div>
												
												<div class="flex-grow">
													<h3 class="text-lg font-bold text-gray-800 dark:text-white mb-2 group-hover:text-${category.color}-600 transition-colors">
														{project.data.title}
													</h3>
													<p class="text-gray-600 dark:text-gray-300 text-sm mb-4 line-clamp-2">
														{project.data.description}
													</p>
													
													{project.data.technologies && project.data.technologies.length > 0 && (
														<div class="flex flex-wrap gap-2 mt-auto">
															{project.data.technologies.slice(0, 3).map((tech: string) => (
																<span class="text-xs px-2 py-1 bg-gray-100 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded-full">
																	{tech}
																</span>
															))}
															{project.data.technologies.length > 3 && (
																<span class="text-xs px-2 py-1 bg-gray-100 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded-full">
																	+{project.data.technologies.length - 3}
																</span>
															)}
														</div>
													)}
												</div>
												
												<div class="mt-4 pt-4 border-t border-gray-100 dark:border-gray-600">
													<span class={`text-sm text-${category.color}-600 dark:text-${category.color}-400 flex items-center justify-end font-medium group-hover:translate-x-1 transition-transform duration-300`}>
														Voir les détails
														<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
															<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
														</svg>
													</span>
												</div>
											</div>
										</a>
									))}
								</div>
							</div>
						</div>
					</div>
				)
			))}
			
			<!-- Projets de la catégorie "autre" s'il y en a -->
			{groupedProjects['autre'].length > 0 && (
				<div id="autre" class="mb-20">
					<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg overflow-hidden transition-transform hover:scale-[1.01]">
						<div class="p-6 border-b border-gray-100 dark:border-gray-700">
							<div class="flex items-center gap-3 mb-4">
								<div class="p-3 rounded-lg text-gray-600 bg-gray-100 dark:bg-gray-700">
									<span class="text-xl">
										<i class="fas fa-folder"></i>
									</span>
								</div>
								<h2 class="text-2xl font-bold text-gray-800 dark:text-white">
									Autres Projets
								</h2>
							</div>
							<p class="text-gray-600 dark:text-gray-300 mt-1 mb-4">
								Projets et initiatives divers qui complètent mon portfolio.
							</p>
							
							<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mt-6">
								{groupedProjects['autre'].map((project) => (
									<a href={`/projets/${project.slug}`} class="group">
										<div class="bg-white dark:bg-gray-700 rounded-lg shadow-md p-5 transform transition-all duration-300 hover:shadow-lg hover:-translate-y-1 flex flex-col h-full">
											<div class="relative h-40 mb-4 overflow-hidden rounded-lg">
												{project.data.img ? (
													<img 
														src={project.data.img} 
														alt={project.data.img_alt || project.data.title} 
														class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110"
													/>
												) : (
													<div class="w-full h-full bg-gray-600 dark:bg-gray-700 flex items-center justify-center">
														<i class="fas fa-folder text-white text-3xl"></i>
													</div>
												)}
												<div class="absolute top-2 right-2">
													<span class="text-xs px-2 py-1 rounded-full bg-black/50 text-white backdrop-blur-sm">
														{formatDate(project.data.publishDate)}
													</span>
												</div>
											</div>
											
											<div class="flex-grow">
												<h3 class="text-lg font-bold text-gray-800 dark:text-white mb-2 group-hover:text-gray-600 transition-colors">
													{project.data.title}
												</h3>
												<p class="text-gray-600 dark:text-gray-300 text-sm mb-4 line-clamp-2">
													{project.data.description}
												</p>
												
												{project.data.technologies && project.data.technologies.length > 0 && (
													<div class="flex flex-wrap gap-2 mt-auto">
														{project.data.technologies.slice(0, 3).map((tech: string) => (
															<span class="text-xs px-2 py-1 bg-gray-100 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded-full">
																{tech}
															</span>
														))}
														{project.data.technologies.length > 3 && (
															<span class="text-xs px-2 py-1 bg-gray-100 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded-full">
																+{project.data.technologies.length - 3}
															</span>
														)}
													</div>
												)}
											</div>
											
											<div class="mt-4 pt-4 border-t border-gray-100 dark:border-gray-600">
												<span class="text-sm text-gray-600 dark:text-gray-400 flex items-center justify-end font-medium group-hover:translate-x-1 transition-transform duration-300">
													Voir les détails
													<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
														<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
													</svg>
												</span>
											</div>
										</div>
									</a>
								))}
							</div>
						</div>
					</div>
				</div>
			)}
		</div>
	</section>

	<!-- Section Contact -->
	<section class="py-16 bg-gray-50 dark:bg-gray-800">
		<div class="container mx-auto px-4">
			<div class="max-w-3xl mx-auto text-center">
				<h2 class="text-2xl font-bold text-gray-800 dark:text-white mb-4">Vous avez un projet en tête ?</h2>
				<p class="text-lg text-gray-600 dark:text-gray-300 mb-8">
					N'hésitez pas à me contacter pour discuter de votre projet. Je serai ravi de vous aider à le concrétiser et à trouver des solutions adaptées à vos besoins.
				</p>
				<a href="/contact" class="inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors duration-200">
					<i class="fas fa-paper-plane mr-2"></i>
					Me contacter
				</a>
			</div>
		</div>
	</section>
	
	<BackToTop />
</BaseLayout>

<script defer is:inline>
	// Ajout de Font Awesome
	if (!document.querySelector('#font-awesome')) {
		const link = document.createElement('link');
		link.id = 'font-awesome';
		link.rel = 'stylesheet';
		link.href = 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css';
		document.head.appendChild(link);
	}
	
	// Animation au scroll
	document.addEventListener('DOMContentLoaded', function() {
		const observer = new IntersectionObserver((entries) => {
			entries.forEach(entry => {
				if (entry.isIntersecting) {
					entry.target.classList.add('animate-fade-in');
					observer.unobserve(entry.target);
				}
			});
		}, { threshold: 0.1 });
		
		document.querySelectorAll('.projects-page section > div > div[id], a.group').forEach(section => {
			section.classList.add('opacity-0');
			observer.observe(section);
		});
	});
</script>

<style>
	/* Animation de fade in */
	.animate-fade-in {
		animation: fadeIn 0.6s ease-out forwards;
	}
	
	@keyframes fadeIn {
		from {
			opacity: 0;
			transform: translateY(20px);
		}
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}
	
	/* Classes d'utilitaires pour les couleurs */
	.bg-blue-100 { background-color: #dbeafe; }
	.bg-blue-600 { background-color: #2563eb; }
	.bg-blue-700 { background-color: #1d4ed8; }
	.text-blue-600 { color: #2563eb; }
	.text-blue-400 { color: #60a5fa; }
	.text-blue-800 { color: #1e40af; }
	.text-blue-300 { color: #93c5fd; }
	
	.bg-green-100 { background-color: #d1fae5; }
	.bg-green-600 { background-color: #059669; }
	.bg-green-700 { background-color: #047857; }
	.text-green-600 { color: #059669; }
	.text-green-400 { color: #34d399; }
	.text-green-800 { color: #065f46; }
	.text-green-300 { color: #6ee7b7; }
	
	.bg-purple-100 { background-color: #ede9fe; }
	.bg-purple-600 { background-color: #7c3aed; }
	.bg-purple-700 { background-color: #6d28d9; }
	.text-purple-600 { color: #7c3aed; }
	.text-purple-400 { color: #a78bfa; }
	.text-purple-800 { color: #5b21b6; }
	.text-purple-300 { color: #c4b5fd; }
	
	.bg-red-100 { background-color: #fee2e2; }
	.bg-red-600 { background-color: #dc2626; }
	.bg-red-700 { background-color: #b91c1c; }
	.text-red-600 { color: #dc2626; }
	.text-red-400 { color: #f87171; }
	.text-red-800 { color: #991b1b; }
	.text-red-300 { color: #fca5a5; }
	
	.bg-amber-100 { background-color: #fef3c7; }
	.bg-amber-600 { background-color: #d97706; }
	.bg-amber-700 { background-color: #b45309; }
	.text-amber-600 { color: #d97706; }
	.text-amber-400 { color: #fbbf24; }
	.text-amber-800 { color: #92400e; }
	.text-amber-300 { color: #fcd34d; }
	
	/* Utilitaires pour le contenu */
	.line-clamp-2 {
		display: -webkit-box;
		-webkit-line-clamp: 2;
		-webkit-box-orient: vertical;
		overflow: hidden;
	}
	
	.line-clamp-3 {
		display: -webkit-box;
		-webkit-line-clamp: 3;
		-webkit-box-orient: vertical;
		overflow: hidden;
	}
</style> 