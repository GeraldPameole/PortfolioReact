---
import { getCollection } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';
import { DOMAINS_CONFIG, COLOR_CLASSES, TEXT_COLORS, ICON_COLORS } from '../config/domains';

// Récupération des projets
const projects = await getCollection('work');

// Tri des projets par date de publication (du plus récent au plus ancien)
const sortedProjects = projects.sort((a, b) => {
	return new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime();
});

// Utiliser la configuration centralisée des domaines
const projectCategories = {
	'management': DOMAINS_CONFIG['gestion-projet'],
	'developpement-web': DOMAINS_CONFIG['developpement-web'],
	'business': DOMAINS_CONFIG['developpement-commercial'],
	'qualite-process': DOMAINS_CONFIG['qualite-process'],
	'developpement-personnel': DOMAINS_CONFIG['formation']
};

// Rôles par catégorie (affiché sur la carte)
const roleByCategory = {
	management: "Chef de Projet Télécom",
	'developpement-web': "Développeur Web Full Stack",
	business: "Manager d'Équipe Commerciale",
	'qualite-process': "Responsable Qualité & Process",
	'developpement-personnel': "Formateur & Coach"
};

// Grouper les projets par catégorie
const groupedProjects: Record<string, typeof projects> = {};
for (const category in projectCategories) {
	groupedProjects[category] = [];
}
groupedProjects['autre'] = [];

// Assigner les projets aux catégories appropriées
sortedProjects.forEach(project => {
	let assigned = false;
	if (project.data.technologies) {
		const techs = project.data.technologies.map((t: string) => t.toLowerCase());
		
		// Règles d'assignation basées sur les technologies
		if (techs.some((t: string) => ['react', 'vue', 'angular', 'javascript', 'typescript', 'html', 'css', 'web'].includes(t))) {
			groupedProjects['developpement-web'].push(project);
			assigned = true;
		} 
		else if (techs.some((t: string) => ['ios', 'android', 'react native', 'flutter', 'swift', 'kotlin', 'mobile'].includes(t))) {
			groupedProjects['developpement-web'].push(project);
			assigned = true;
		}
		else if (techs.some((t: string) => ['gestion', 'management', 'agile', 'scrum', 'kanban', 'jira'].includes(t))) {
			groupedProjects['management'].push(project);
			assigned = true;
		}
		else if (techs.some((t: string) => ['formation', 'learning', 'elearning', 'conseil', 'consulting', 'productivité', 'habitudes'].includes(t))) {
			groupedProjects['developpement-personnel'].push(project);
			assigned = true;
		}
		else if (techs.some((t: string) => ['vente', 'commercial', 'business', 'marketing', 'crm', 'client', 'startup', 'innovation'].includes(t))) {
			groupedProjects['business'].push(project);
			assigned = true;
		}
		else if (techs.some((t: string) => ['qualité', 'process', 'devops', 'test', 'ci/cd', 'clean code'].includes(t))) {
			groupedProjects['qualite-process'].push(project);
			assigned = true;
		}
	}
	
	if (!assigned) {
		groupedProjects['autre'].push(project);
	}
});

// Fonction pour formater la date
function formatDate(date: Date | string): string {
	const dateObj = typeof date === 'string' ? new Date(date) : date;
	return dateObj.toLocaleDateString('fr-FR', {
		year: 'numeric',
		month: 'long',
		day: 'numeric'
	});
}
---

<BaseLayout
	title="Projets & Réalisations | Gérald Paméole | Chef de Projet Télécom" 
	description="Portfolio de projets et réalisations dans les télécommunications et le développement web. Découvrez mes interventions en gestion de projet, transformation digitale et développement commercial."
	customClass="bg-gradient-to-br from-gray-50 to-white dark:from-gray-900 dark:to-gray-800"
>
	<!-- En-tête de page -->
	<section class="py-16 md:py-24 bg-gradient-to-r from-indigo-600/5 to-violet-600/5 w-screen" style="margin-left: calc(50% - 50vw); margin-right: calc(50% - 50vw);">
		<div class="content-container text-center">
			<h1 class="text-4xl md:text-5xl font-bold mb-6 text-transparent bg-clip-text bg-gradient-to-r from-indigo-600 to-blue-500">
				Mes Réalisations
				</h1>
			<p class="text-xl text-[#111827] dark:text-gray-200 mb-6">
				Une sélection de mes interventions en gestion de projet, développement web et optimisation des processus
			</p>
			<div class="flex flex-wrap justify-center gap-3 mb-8">
				<span class={`px-4 py-2 rounded-full ${COLOR_CLASSES.blue}`}>Gestion de Projet</span>
				<span class={`px-4 py-2 rounded-full ${COLOR_CLASSES.green}`}>Développement Web</span>
				<span class={`px-4 py-2 rounded-full ${COLOR_CLASSES.purple}`}>Qualité & Process</span>
				<span class={`px-4 py-2 rounded-full ${COLOR_CLASSES.red}`}>Formation</span>
				<span class={`px-4 py-2 rounded-full ${COLOR_CLASSES.orange}`}>Développement Commercial</span>
			</div>
		</div>
	</section>

	<!-- Section Domaines d'Expertise -->
	<main class="py-20 bg-gray-50 dark:bg-gray-900">
		<div class="content-container">
			<div class="text-center mb-16">
				<h2 class="text-4xl font-bold text-[#111827] dark:text-white mb-4">
					Domaines d'Expertise
			</h2>
				<p class="text-xl text-[#111827] dark:text-gray-300 max-w-3xl mx-auto">
					Découvrez mes compétences dans 5 domaines clés, chacun représentant une expertise spécifique
				</p>
			</div>
			
									<!-- Ligne 1: 3 cartes occupant 80% de la largeur -->
			<div class="w-4/5 mx-auto mb-8">
				<div class="grid grid-cols-1 md:grid-cols-3 gap-6">
					{Object.entries(projectCategories).slice(0, 3).map(([categoryKey, category]) => (
						<article class="bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6 hover:shadow-xl transition-all duration-300 hover:transform hover:scale-[1.02] border border-gray-100 dark:border-gray-700 h-[420px]">
							<div class="flex flex-col items-center text-center h-full justify-between">
								<div class="flex flex-col items-center">
									<div class={`p-4 rounded-2xl ${category.colorClass} inline-flex items-center justify-center mb-5 shadow-md`}>
										<i class={`${category.icon} text-3xl`}></i>
									</div>
									<h3 class="text-xl font-bold text-[#111827] dark:text-white mb-4">{category.name}</h3>
									<p class="text-[#111827] dark:text-gray-300 mb-5 text-sm leading-relaxed">{category.description}</p>
									<div class="bg-gray-50 dark:bg-gray-700 px-4 py-2 rounded-full mb-5">
										<p class="text-sm text-gray-600 dark:text-gray-400 font-medium">{roleByCategory[categoryKey as keyof typeof roleByCategory]}</p>
									</div>
								</div>
								<div class="flex flex-col items-center">
									<div class="flex flex-wrap justify-center gap-2 mb-5">
										{(groupedProjects[categoryKey][0]?.data.technologies ?? ['Leadership','Organisation','Planification']).slice(0,3).map((pill: string) => (
											<span class="px-2 py-1 text-xs font-medium bg-gray-200 text-gray-800 dark:bg-gray-600 dark:text-gray-200 rounded-full">{pill}</span>
				))}
			</div>
									{groupedProjects[categoryKey].length > 0 ? (
										<a href={`/projets/${groupedProjects[categoryKey][0].slug}`} class="inline-flex items-center gap-2 ${TEXT_COLORS[config.color as keyof typeof TEXT_COLORS] || TEXT_COLORS.blue} hover:underline font-medium text-sm">
											Voir le projet <i class="fas fa-arrow-right"></i>
										</a>
									) : (
										<a href="#" class="inline-flex items-center gap-2 ${TEXT_COLORS[config.color as keyof typeof TEXT_COLORS] || TEXT_COLORS.blue} opacity-70 cursor-not-allowed text-sm">
											Bientôt disponible
										</a>
									)}
								</div>
							</div>
						</article>
				))}
			</div>
		</div>
			
			<!-- Ligne 2: 2 cartes se répartissant l'espace restant -->
			<div class="w-4/5 mx-auto">
				<div class="grid grid-cols-1 md:grid-cols-2 gap-6">
					{Object.entries(projectCategories).slice(3, 5).map(([categoryKey, category]) => (
						<article class="bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-6 hover:shadow-xl transition-all duration-300 hover:transform hover:scale-[1.02] border border-gray-100 dark:border-gray-700 h-[420px]">
							<div class="flex flex-col items-center text-center h-full justify-between">
								<div class="flex flex-col items-center">
									<div class={`p-4 rounded-2xl ${category.colorClass} inline-flex items-center justify-center mb-5 shadow-md`}>
										<i class={`${category.icon} text-3xl`}></i>
									</div>
									<h3 class="text-xl font-bold text-[#111827] dark:text-white mb-4">{category.name}</h3>
									<p class="text-[#111827] dark:text-gray-300 mb-5 text-sm leading-relaxed">{category.description}</p>
									<div class="bg-gray-50 dark:bg-gray-700 px-4 py-2 rounded-full mb-5">
										<p class="text-sm text-gray-600 dark:text-gray-400 font-medium">{roleByCategory[categoryKey as keyof typeof roleByCategory]}</p>
									</div>
								</div>
								<div class="flex flex-col items-center">
									<div class="flex flex-wrap justify-center gap-2 mb-5">
										{(groupedProjects[categoryKey][0]?.data.technologies ?? ['Stratégie','Relation client','Négociation']).slice(0,3).map((pill: string) => (
											<span class="px-2 py-1 text-xs font-medium bg-gray-200 text-gray-800 dark:bg-gray-600 dark:text-gray-200 rounded-full">{pill}</span>
										))}
									</div>
									{groupedProjects[categoryKey].length > 0 ? (
										<a href={`/projets/${groupedProjects[categoryKey][0].slug}`} class="inline-flex items-center gap-2 ${TEXT_COLORS[config.color as keyof typeof TEXT_COLORS] || TEXT_COLORS.blue} hover:underline font-medium text-sm">
											Voir le projet <i class="fas fa-arrow-right"></i>
										</a>
									) : (
										<a href="#" class="inline-flex items-center gap-2 ${TEXT_COLORS[config.color as keyof typeof TEXT_COLORS] || TEXT_COLORS.blue} opacity-70 cursor-not-allowed text-sm">
											Bientôt disponible
										</a>
												)}
											</div>
							</div>
						</article>
					))}
					</div>
			</div>
		</div>
	</main>

	<!-- Call-to-action -->
	<section class="py-16 bg-white dark:bg-gray-800">
		<div class="content-container">
			<div class="bg-gradient-to-r from-indigo-600 to-violet-600 rounded-xl text-white text-center p-12">
				<h2 class="text-3xl font-bold mb-4">Envie de collaborer ?</h2>
				<p class="text-xl mb-8 opacity-90">
					Discutons de vos projets et voyons comment je peux vous aider à les concrétiser
				</p>
				<div class="flex flex-col sm:flex-row gap-4 justify-center">
					<a href="/contact" class="px-8 py-3 bg-white text-indigo-600 rounded-lg font-semibold hover:bg-gray-100 transition-colors">
					Me contacter
				</a>
					<a href="/about" class="px-8 py-3 border-2 border-white text-white rounded-lg font-semibold hover:bg-white hover:text-indigo-600 transition-colors">
						En savoir plus
					</a>
				</div>
			</div>
		</div>
	</section>
</BaseLayout>

	<script>
		// Chargement de FontAwesome si pas déjà présent
	if (!document.querySelector('#font-awesome')) {
		const link = document.createElement('link');
			link.rel = 'stylesheet';
		link.id = 'font-awesome';
		link.href = 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css';
		document.head.appendChild(link);
	}
</script>

<style>
	/* Styles cohérents avec le design system */
	.line-clamp-3 {
		display: -webkit-box;
		-webkit-line-clamp: 3;
		-webkit-box-orient: vertical;
		overflow: hidden;
	}
	
	/* Animations CSS avancées */
	@keyframes fadeInUp {
		from {
			opacity: 0;
			transform: translateY(30px);
		}
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}

	@keyframes float {
		0%, 100% {
			transform: translateY(0px);
		}
		50% {
			transform: translateY(-20px);
		}
	}

	@keyframes pulse-glow {
		0%, 100% {
			box-shadow: 0 0 5px rgba(99, 102, 241, 0.3);
		}
		50% {
			box-shadow: 0 0 20px rgba(99, 102, 241, 0.6);
		}
	}

	.animate-fade-in-up {
		animation: fadeInUp 0.8s ease-out forwards;
	}

	.animate-float {
		animation: float 3s ease-in-out infinite;
	}

	.animate-pulse-glow {
		animation: pulse-glow 2s ease-in-out infinite;
	}

	/* Effets de hover améliorés */
	.hover-lift {
		transition: transform 0.3s ease, box-shadow 0.3s ease;
	}

	.hover-lift:hover {
		transform: translateY(-5px);
		box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
	}

	/* Effet de brillance sur les cartes */
	.card-shine {
		position: relative;
		overflow: hidden;
	}

	.card-shine::before {
		content: '';
		position: absolute;
		top: 0;
		left: -100%;
		width: 100%;
		height: 100%;
		background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
		transition: left 0.5s;
	}

	.card-shine:hover::before {
		left: 100%;
	}

	/* Responsive */
	@media (max-width: 768px) {
		.content-container {
			padding: 0 1rem;
		}
		
		section {
			padding: 1.5rem;
		}
	}
</style>

<!-- Script pour les animations et interactions -->
<script defer is:inline>
	// Ajout de Font Awesome
	if (!document.querySelector('#font-awesome')) {
		const link = document.createElement('link');
		link.id = 'font-awesome';
		link.rel = 'stylesheet';
		link.href = 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css';
		document.head.appendChild(link);
	}
	
  // Animation pour les éléments au scroll
  document.addEventListener('DOMContentLoaded', () => {
		const observer = new IntersectionObserver((entries) => {
			entries.forEach(entry => {
				if (entry.isIntersecting) {
					entry.target.classList.add('animate-fade-in');
					observer.unobserve(entry.target);
				}
			});
		}, { threshold: 0.1 });
		
    document.querySelectorAll('section').forEach(section => {
			observer.observe(section);
		});

    // Effet de parallaxe pour les éléments flottants
    window.addEventListener('scroll', () => {
      const scrolled = window.pageYOffset;
      const parallaxElements = document.querySelectorAll('.animate-float');
      
      parallaxElements.forEach((element, index) => {
        const speed = 0.5 + (index * 0.1);
        element.style.transform = `translateY(${scrolled * speed}px)`;
      });
    });

    // Effet de brillance sur les cartes au survol
    document.querySelectorAll('.card-shine').forEach(card => {
      card.addEventListener('mouseenter', () => {
        card.style.animation = 'pulse-glow 0.6s ease-in-out';
      });
      
      card.addEventListener('mouseleave', () => {
        card.style.animation = '';
      });
    });

    // Animation des icônes au survol
    document.querySelectorAll('.group').forEach(group => {
      group.addEventListener('mouseenter', () => {
        const icon = group.querySelector('i');
        if (icon) {
          icon.style.transform = 'scale(1.2) rotate(5deg)';
          icon.style.transition = 'transform 0.3s ease';
        }
      });
      
      group.addEventListener('mouseleave', () => {
        const icon = group.querySelector('i');
        if (icon) {
          icon.style.transform = 'scale(1) rotate(0deg)';
        }
      });
    });

    // Effet de particules flottantes
    function createParticle() {
      const particle = document.createElement('div');
      particle.className = 'particle';
      particle.style.cssText = `
        position: fixed;
        width: 4px;
        height: 4px;
        background: linear-gradient(45deg, #3b82f6, #8b5cf6);
        border-radius: 50%;
        pointer-events: none;
        z-index: 1;
        animation: float 6s ease-in-out infinite;
      `;
      
      particle.style.left = Math.random() * window.innerWidth + 'px';
      particle.style.top = window.innerHeight + 'px';
      
      document.body.appendChild(particle);
      
      setTimeout(() => {
        particle.remove();
      }, 6000);
    }

    // Créer des particules périodiquement
    setInterval(createParticle, 3000);
  });
</script> 