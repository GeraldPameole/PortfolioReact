import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';

const articles = await getCollection('articles');
const sortedArticles = articles.sort((a, b) => 
  b.data.publishDate.getTime() - a.data.publishDate.getTime()
);

<BaseLayout title="Articles" description="Liste des articles">
  <div class="container mx-auto px-4 py-8">
    <h1 class="text-4xl font-bold mb-8">Articles</h1>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {sortedArticles.map((article: CollectionEntry<'articles'>) => (
        <article class="bg-white dark:bg-gray-800 rounded-lg shadow-lg overflow-hidden">
          {article.data.image && (
            <img
              src={article.data.image}
              alt={article.data.title}
              class="w-full h-48 object-cover"
            />
          )}
          <div class="p-6">
            <h2 class="text-xl font-semibold mb-2">
              <a href={`/articles/${article.slug}`} class="hover:text-blue-500">
                {article.data.title}
              </a>
            </h2>
            <p class="text-gray-600 dark:text-gray-300 mb-4">
              {article.data.description}
            </p>
            <div class="flex items-center text-sm text-gray-500 dark:text-gray-400">
              <time datetime={article.data.publishDate.toISOString()}>
                {new Date(article.data.publishDate).toLocaleDateString('fr-FR', {
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric'
                })}
              </time>
              {article.data.author && (
                <>
                  <span class="mx-2">â€¢</span>
                  <span>{article.data.author}</span>
                </>
              )}
            </div>
          </div>
        </article>
      ))}
    </div>
  </div>
</BaseLayout>

<style>
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
  }

  .articles-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 2rem;
    margin-top: 2rem;
  }

  .article-card {
    padding: 1.5rem;
    border-radius: 8px;
    background: var(--gray-999_40);
    box-shadow: var(--shadow-sm);
    transition: transform 0.2s ease-in-out;
  }

  .article-card:hover {
    transform: translateY(-5px);
    box-shadow: var(--shadow-md);
  }

  h1 {
    text-align: center;
    margin-bottom: 2rem;
    color: var(--gray-0);
  }

  h2 {
    margin-bottom: 1rem;
    color: var(--gray-0);
  }

  p {
    color: var(--gray-300);
    margin-bottom: 1rem;
  }

  .article-meta {
    font-size: 0.9rem;
    color: var(--gray-400);
    margin-bottom: 1rem;
    display: flex;
    gap: 1rem;
  }

  .read-more {
    color: var(--accent-regular);
    text-decoration: none;
    font-weight: 500;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
  }

  .read-more:hover .arrow {
    transform: translateX(4px);
  }

  .arrow {
    transition: transform 0.2s ease;
  }
</style> 