---
import { type CollectionEntry, getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import ContactCTA from '../../components/ContactCTA.astro';
import Hero from '../../components/Hero.astro';
import Icon from '../../components/Icon.astro';

interface Props {
	entry: CollectionEntry<'articles'>;
}

export async function getStaticPaths() {
	const articles = await getCollection('articles');
	return articles.map((entry) => ({
		params: { slug: entry.slug },
		props: { entry },
	}));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<BaseLayout title={entry.data.title} description={entry.data.description}>
	<div class="stack gap-20">
		<div class="stack gap-15">
			<header>
				<div class="wrapper stack gap-2">
					<a class="back-link" href="/work/blog/"><Icon icon="arrow-left" /> Articles</a>
					<Hero title={entry.data.title} align="start">
						<div class="details">
							<p class="publish-date">Publi√© le {entry.data.publishDate.toLocaleDateString('fr-FR')}</p>
							<p class="author">Par {entry.data.author}</p>
							<p class="description">{entry.data.description}</p>
						</div>
					</Hero>
				</div>
			</header>
			<main class="wrapper">
				<div class="stack gap-10 content">
					<div class="content">
						<Content />
					</div>
				</div>
			</main>
		</div>
		<ContactCTA />
	</div>
</BaseLayout>

<style>
	header {
		padding-bottom: 2.5rem;
		border-bottom: 1px solid var(--gray-800);
		width: 80%;
		margin: 0 auto;
	}

	.back-link {
		display: none;
	}

	.details {
		display: flex;
		flex-direction: column;
		padding: 0.5rem;
		gap: 1.5rem;
		justify-content: space-between;
		align-items: start;
	}

	.publish-date, .author {
		color: var(--gray-400);
		font-size: var(--text-md);
	}

	.description {
		font-size: var(--text-lg);
		max-width: 80ch;
		text-align: justify;
		line-height: 1.6;
	}

	.content {
		width: 80%;
		margin: 0 auto;
	}

	.content > :global(* + *) {
		margin-top: 1.5rem;
	}

	.content :global(h1) {
		font-size: var(--text-2xl);
		color: var(--gray-0);
		margin: 2rem 0 1.5rem;
		line-height: 1.3;
	}

	.content :global(h2) {
		font-size: var(--text-xl);
		color: var(--gray-0);
		margin: 2rem 0 1.5rem;
		line-height: 1.3;
	}

	.content :global(h3) {
		font-size: var(--text-lg);
		color: var(--gray-0);
		margin: 1.5rem 0 1rem;
		line-height: 1.3;
	}

	.content :global(h4) {
		font-size: var(--text-md);
		color: var(--gray-0);
		margin: 1.5rem 0 1rem;
		line-height: 1.3;
	}

	.content :global(p) {
		line-height: 1.8;
		color: var(--gray-300);
		font-size: var(--text-md);
	}

	.content :global(ul), .content :global(ol) {
		padding-left: 1.5rem;
		margin: 1rem 0;
	}

	.content :global(li) {
		margin: 0.5rem 0;
		color: var(--gray-300);
		line-height: 1.6;
	}

	.content :global(img) {
		border-radius: 1rem;
		box-shadow: var(--shadow-sm);
		background: var(--gradient-subtle);
		border: 1px solid var(--gray-800);
		width: 100%;
		height: auto;
	}

	.content :global(blockquote) {
		font-size: var(--text-lg);
		font-family: var(--font-brand);
		font-weight: 500;
		line-height: 1.4;
		padding: 1.5rem;
		margin: 2rem 0;
		border-left: 0.25rem solid var(--accent-regular);
		background: var(--gray-999);
		border-radius: 0.5rem;
		color: var(--gray-200);
	}

	.back-link,
	.content :global(a) {
		text-decoration: 1px solid underline transparent;
		text-underline-offset: 0.25em;
		transition: text-decoration-color var(--theme-transition);
		color: var(--accent-regular);
	}

	.back-link:hover,
	.back-link:focus,
	.content :global(a:hover),
	.content :global(a:focus) {
		text-decoration-color: currentColor;
	}

	@media (max-width: 50em) {
		header, .content {
			width: 95%;
		}

		.content :global(h1) {
			font-size: var(--text-xl);
		}

		.content :global(h2) {
			font-size: var(--text-lg);
		}

		.content :global(h3) {
			font-size: var(--text-md);
		}

		.content :global(h4) {
			font-size: var(--text-md);
		}

		.content :global(p), .content :global(li) {
			font-size: var(--text-sm);
		}
	}

	@media (min-width: 50em) {
		.back-link {
			display: block;
			align-self: flex-start;
		}

		.details {
			flex-direction: column;
			gap: 1.5rem;
		}
	}
</style> 