---
import { getCollection } from 'astro:content';
import BackButton from '../../components/BackButton.astro';
import BaseLayout from '../../layouts/BaseLayout.astro';

export async function getStaticPaths() {
	const articles = await getCollection('articles');
	
	return articles.map((article) => ({
		params: { slug: article.slug },
		props: { article }
	}));
}

const { article } = Astro.props;
const { Content } = await article.render();

function formatDate(date: string | Date) {
	const dateObj = typeof date === 'string' ? new Date(date) : date;
	return dateObj.toLocaleDateString('fr-FR', {
		year: 'numeric',
		month: 'long',
		day: 'numeric'
	});
}

// Mapping des thèmes pour l'affichage
const themeLabels: Record<string, string> = {
	"developpement-web": "Développement Web",
	"management": "Management & Leadership",
	"productivite": "Productivité & Organisation", 
	"marketing": "Marketing Digital",
	"carriere": "Carrière & Formation",
  "intelligence-artificielle": "Intelligence Artificielle"
};

// Pour calculer le temps de lecture approximatif
function getReadingTime(content: string) {
	const wordsPerMinute = 200;
	const text = content.replace(/(<([^>]+)>)/gi, '');
	const numberOfWords = text.split(/\s/g).length;
	return Math.ceil(numberOfWords / wordsPerMinute);
}

// Extraire l'estimation du temps de lecture
const readingTime = getReadingTime(article.body) || 5; // Calcul réel ou valeur par défaut

// Construire les méta-données structurées pour le SEO
const jsonLd = {
  "@context": "https://schema.org",
  "@type": "Article",
  "headline": article.data.title,
  "description": article.data.description,
  "image": article.data.image,
  "datePublished": article.data.publishDate.toString(),
  "dateModified": article.data.publishDate.toString(), // Utiliser publishDate si updatedDate n'existe pas
  "author": {
    "@type": "Person",
    "name": article.data.author || "Gérald Paméole"
  }
};

// Générer les mots-clés à partir des tags
const keywords = [
  article.data.title,
  article.data.tags?.join(", ") || "",
  article.data.theme ? themeLabels[article.data.theme] || article.data.theme : "",
  "article",
  "blog"
].filter(Boolean).join(", ");

// Convertir les URL pour les méta tags
const currentUrl = Astro.url.toString();
---

<BaseLayout 
	title={article.data.title}
	description={article.data.description}
  image={article.data.image}
  keywords={keywords}
  type="article"
  fullWidth={true}
>
  <!-- Données structurées pour les moteurs de recherche -->
  <script type="application/ld+json" set:html={JSON.stringify(jsonLd)} />
  
	<article class="content-container article-content">
		<header class="article-header">
			<div class="article-theme">
        {article.data.theme && (
          <a href={`/themes/${article.data.theme}`} class="theme-link">
            {themeLabels[article.data.theme] || article.data.theme}
          </a>
        )}
      </div>
      
			<h1 class="article-title">{article.data.title}</h1>
			
      <div class="article-meta">
				<time datetime={article.data.publishDate.toString()}>
					{formatDate(article.data.publishDate)}
				</time>
				{article.data.author && (
					<>
						<span class="mx-2">•</span>
						<span>{article.data.author}</span>
					</>
				)}
        <span class="mx-2">•</span>
        <span>{readingTime} min de lecture</span>
			</div>
      
      {article.data.tags && article.data.tags.length > 0 && (
        <div class="article-tags">
          {article.data.tags.map((tag: string) => (
            <a 
              href={`/tags/${tag}`} 
              class="tag-link"
            >
              #{tag}
            </a>
          ))}
        </div>
      )}
      
			{article.data.image && (
				<img
					src={article.data.image}
					alt={article.data.title}
					class="article-image"
          loading="eager"
          width="800"
          height="400"
				/>
			)}
		</header>
    
		<div class="article-content-typography">
			<Content />
		</div>
    
    <footer class="mt-12 pt-8 border-t border-gray-200 dark:border-gray-800">
      <div class="flex flex-col md:flex-row justify-between items-start md:items-center">
        <div class="mb-4 md:mb-0">
          <h4 class="text-xl font-semibold mb-2">À propos de l'auteur</h4>
          <p class="text-[#111827] dark:text-gray-300">
            {article.data.author || "Gérald Paméole"} - Développeur Full Stack et Expert en IA
          </p>
        </div>
        
        <div class="flex items-center space-x-4">
          <span class="text-sm">Partager :</span>
          <a href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(article.data.title)}&url=${encodeURIComponent(currentUrl)}`} target="_blank" rel="noopener noreferrer" class="text-secondary-warm hover:text-secondary-cool" aria-label="Partager sur Twitter">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 24 24"><path d="M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z"></path></svg>
          </a>
          <a href={`https://www.linkedin.com/shareArticle?mini=true&url=${encodeURIComponent(currentUrl)}&title=${encodeURIComponent(article.data.title)}`} target="_blank" rel="noopener noreferrer" class="text-secondary-warm hover:text-secondary-cool" aria-label="Partager sur LinkedIn">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 24 24"><path d="M4.98 3.5c0 1.381-1.11 2.5-2.48 2.5s-2.48-1.119-2.48-2.5c0-1.38 1.11-2.5 2.48-2.5s2.48 1.12 2.48 2.5zm.02 4.5h-5v16h5v-16zm7.982 0h-4.968v16h4.969v-8.399c0-4.67 6.029-5.052 6.029 0v8.399h4.988v-10.131c0-7.88-8.922-7.593-11.018-3.714v-2.155z"></path></svg>
          </a>
        </div>
      </div>
    </footer>
    <BackButton position="bottom-right" />
	</article>
</BaseLayout>

<style>
	/* Styles spécifiques à la page article */
	.article-header {
		margin-bottom: var(--content-spacing-xl);
	}

	.article-theme {
		margin-bottom: var(--content-spacing-sm);
	}

	.theme-link {
		font-size: var(--text-sm);
		color: var(--color-secondary-warm);
		font-weight: 600;
		text-decoration: none;
		transition: color 0.2s ease;
	}

	.theme-link:hover {
		color: var(--color-tertiary-light);
		text-decoration: underline;
	}

	.article-title {
		font-size: var(--text-4xl);
		font-weight: var(--font-bold);
		color: var(--color-primary-dark);
		margin-bottom: var(--content-spacing-md);
		line-height: var(--leading-tight);
	}

	.article-meta {
		display: flex;
		flex-wrap: wrap;
		align-items: center;
		font-size: var(--text-sm);
		color: var(--color-primary-dark);
		margin-bottom: var(--content-spacing-md);
	}

	.article-meta time,
	.article-meta span {
		color: var(--color-primary-dark);
	}

	.article-meta .mx-2 {
		margin: 0 var(--content-spacing-sm);
		color: var(--color-secondary-warm);
	}

	.article-tags {
		display: flex;
		flex-wrap: wrap;
		gap: var(--content-spacing-sm);
		margin-bottom: var(--content-spacing-lg);
	}

	.tag-link {
		font-size: var(--text-xs);
		padding: var(--content-spacing-xs) var(--content-spacing-sm);
		border-radius: 9999px;
		background-color: var(--color-tertiary-light);
		color: var(--color-primary-dark);
		text-decoration: none;
		font-weight: 500;
		transition: all 0.2s ease;
	}

	.tag-link:hover {
		background-color: var(--color-secondary-warm);
		color: white;
		transform: translateY(-1px);
	}

	.article-image {
		width: 100%;
		height: auto;
		max-height: 400px;
		object-fit: cover;
		border-radius: var(--content-border-radius);
		margin-bottom: var(--content-spacing-lg);
		box-shadow: var(--content-shadow-md);
	}

	.article-content footer {
		margin-top: var(--content-spacing-2xl);
		padding-top: var(--content-spacing-lg);
		border-top: 2px solid var(--color-secondary-warm);
	}
	
	/* Mode sombre */
	@media (prefers-color-scheme: dark) {
		.article-title {
			color: var(--text-light);
		}

		.article-meta time,
		.article-meta span {
			color: var(--text-light);
		}
		
		.article-meta .mx-2 {
			color: var(--color-secondary-warm);
		}
	}

	/* Responsive */
	@media (max-width: 768px) {
		.article-title {
			font-size: var(--text-3xl);
		}

		.article-meta {
			flex-direction: column;
			align-items: flex-start;
			gap: var(--content-spacing-xs);
		}

		.article-meta .mx-2 {
			display: none;
		}
	}
</style> 