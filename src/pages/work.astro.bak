---
import { getCollection } from 'astro:content';
import BackToTop from '../components/BackToTop.astro';
import CallToAction from '../components/CallToAction.astro';
import PageBanner from '../components/PageBanner.astro';
import BaseLayout from '../layouts/BaseLayout.astro';

// Récupération des projets
const projects = await getCollection('work');

// Tri des projets par date de publication (du plus récent au plus ancien)
const sortedProjects = projects.sort((a, b) => {
	return new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime();
});

// Grouper les projets par domaine d'expertise (au lieu de technologie principale)
const projectsByDomain = sortedProjects.reduce((acc, project) => {
	// Utiliser la propriété domain si elle existe, sinon utiliser la première technologie comme avant
	const domain = project.data.domain || 
		(project.data.technologies && project.data.technologies.length > 0 
			? project.data.technologies[0] 
			: 'Autre');
	
	if (!acc[domain]) {
		acc[domain] = [];
	}
	
	acc[domain].push(project);
	return acc;
}, {} as Record<string, typeof projects>);

// Coloration par technologie
const techColors = {
	// Technologies existantes
	'React': { gradient: 'from-blue-500 to-cyan-500', icon: 'fab fa-react', bg: 'bg-blue-100', text: 'text-blue-800' },
	'Vue.js': { gradient: 'from-green-500 to-emerald-500', icon: 'fab fa-vuejs', bg: 'bg-green-100', text: 'text-green-800' },
	'Angular': { gradient: 'from-red-500 to-pink-500', icon: 'fab fa-angular', bg: 'bg-red-100', text: 'text-red-800' },
	'Node.js': { gradient: 'from-green-600 to-lime-500', icon: 'fab fa-node-js', bg: 'bg-green-100', text: 'text-green-800' },
	'Python': { gradient: 'from-yellow-500 to-amber-500', icon: 'fab fa-python', bg: 'bg-yellow-100', text: 'text-yellow-800' },
	'AI/ML': { gradient: 'from-purple-500 to-indigo-500', icon: 'fas fa-brain', bg: 'bg-purple-100', text: 'text-purple-800' },
	'DevOps': { gradient: 'from-orange-500 to-red-500', icon: 'fas fa-server', bg: 'bg-orange-100', text: 'text-orange-800' },
	'Mobile': { gradient: 'from-indigo-500 to-violet-500', icon: 'fas fa-mobile-alt', bg: 'bg-indigo-100', text: 'text-indigo-800' },
	'Web': { gradient: 'from-blue-400 to-cyan-400', icon: 'fas fa-globe', bg: 'bg-blue-100', text: 'text-blue-800' },
	'Cloud': { gradient: 'from-sky-500 to-blue-500', icon: 'fas fa-cloud', bg: 'bg-sky-100', text: 'text-sky-800' },
	'Data': { gradient: 'from-teal-500 to-cyan-500', icon: 'fas fa-database', bg: 'bg-teal-100', text: 'text-teal-800' },
	'Design': { gradient: 'from-pink-500 to-rose-500', icon: 'fas fa-paint-brush', bg: 'bg-pink-100', text: 'text-pink-800' },
	
	// Domaines d'expertise (basés sur l'image)
	'Gestion de Projet': { gradient: 'from-blue-300 to-blue-500', icon: 'fas fa-tasks', text: 'text-blue-600', bg: 'bg-blue-100 dark:bg-blue-900/30' },
	'Développement Web': { gradient: 'from-green-300 to-green-500', icon: 'fas fa-laptop-code', text: 'text-green-600', bg: 'bg-green-100 dark:bg-green-900/30' },
	'Qualité & Process': { gradient: 'from-purple-300 to-purple-500', icon: 'fas fa-clipboard-check', text: 'text-purple-600', bg: 'bg-purple-100 dark:bg-purple-900/30' },
	'Formation': { gradient: 'from-red-200 to-red-400', icon: 'fas fa-graduation-cap', text: 'text-red-600', bg: 'bg-red-100 dark:bg-red-900/30' },
	
	// Catégorie par défaut
	'Autre': { gradient: 'from-gray-500 to-slate-500', icon: 'fas fa-code', bg: 'bg-gray-100', text: 'text-gray-800' }
};

// Formater la date
function formatDate(dateString: string): string {
	return new Date(dateString).toLocaleDateString('fr-FR', {
		year: 'numeric',
		month: 'long'
	});
}

// Total des projets
const totalProjects = sortedProjects.length;

// Statistiques des projets
const projectStats = [
	{ label: 'Projets Réalisés', value: totalProjects, icon: 'fas fa-project-diagram' },
	{ label: 'Technologies', value: Object.keys(projectsByDomain).length, icon: 'fas fa-code' },
	{ label: 'Années d\'Expérience', value: '5+', icon: 'fas fa-clock' },
	{ label: 'Clients Satisfaits', value: '20+', icon: 'fas fa-users' }
];

// Niveaux d'expertise par domaine (basé sur le nombre de projets)
const expertiseLevels = Object.entries(projectsByDomain).map(([domain, projects]) => {
	const percentage = Math.min(100, Math.max(0, (projects.length / Math.max(...Object.values(projectsByDomain).map(p => p.length))) * 100));
	return {
		name: domain,
		percentage: Math.round(percentage),
		icon: techColors[domain as keyof typeof techColors]?.icon || 'fas fa-code'
	};
}).sort((a, b) => b.percentage - a.percentage);
---

<BaseLayout
	title="Mes Projets | Portfolio"
	description="Découvrez une sélection de mes projets en développement web et intelligence artificielle."
	customClass="bg-gradient-to-br from-gray-50 to-white dark:from-gray-900 dark:to-gray-800"
>
	<main class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 py-12">
		<!-- En-tête de page -->
		<section class="py-16 md:py-24 bg-gradient-to-r from-indigo-600/5 to-violet-600/5">
			<div class="container mx-auto px-4">
				<div class="max-w-3xl mx-auto text-center">
					<h1 class="text-4xl md:text-5xl font-bold mb-6 text-gray-800 dark:text-white">
						Portfolio & Réalisations
					</h1>
					<p class="text-xl text-gray-600 dark:text-gray-300 mb-8">
						Découvrez une sélection de mes projets en développement web, gestion de projet 
						et intelligence artificielle. Chaque projet représente un défi unique relevé 
						avec passion et expertise.
					</p>
					<div class="flex flex-wrap justify-center gap-3">
						{Object.keys(projectsByDomain).slice(0, 4).map(domain => (
							<span class={`px-4 py-2 rounded-full ${techColors[domain as keyof typeof techColors]?.bg || 'bg-gray-100'} ${techColors[domain as keyof typeof techColors]?.text || 'text-gray-800'} dark:bg-gray-800/30 dark:text-gray-300`}>
								{domain}
							</span>
						))}
					</div>
				</div>
			</div>
		</section>
		
		<!-- Statistiques -->
		<section class="mb-16">
			<div class="grid grid-cols-2 md:grid-cols-4 gap-4 lg:gap-6">
				{projectStats.map(stat => (
					<div class="bg-white dark:bg-gray-800 rounded-xl shadow-md p-6 transform transition-all duration-300 hover:shadow-lg hover:-translate-y-1">
						<div class="flex items-center justify-between mb-4">
							<span class="text-3xl text-indigo-600 dark:text-indigo-400">
								<i class={stat.icon}></i>
							</span>
							<span class="text-4xl font-bold text-gray-800 dark:text-white">{stat.value}</span>
						</div>
						<p class="text-gray-600 dark:text-gray-300 text-sm">{stat.label}</p>
					</div>
				))}
			</div>
		</section>
		
		<!-- Introduction -->
		<section class="mb-12">
			<div class="bg-white dark:bg-gray-800 rounded-xl shadow-md p-8 transform hover:shadow-lg transition-shadow duration-300">
				<h2 class="text-2xl font-bold mb-4 text-gray-800 dark:text-white">À propos de mon portfolio</h2>
				<div class="prose prose-indigo dark:prose-invert max-w-none">
					<p class="text-lg text-gray-600 dark:text-gray-300">
						Bienvenue dans mon portfolio de projets. Vous y découvrirez une sélection de mes réalisations 
						dans différents domaines du développement web et mobile. Chaque projet représente un défi unique 
						que j'ai relevé avec passion et expertise technique.
					</p>
					<p class="text-gray-600 dark:text-gray-300 mt-4">
						Ces projets illustrent ma capacité à concevoir et développer des solutions 
						numériques innovantes et performantes, en utilisant les technologies les plus adaptées 
						à chaque besoin spécifique.
					</p>
				</div>
			</div>
		</section>
		
		<!-- Niveaux d'expertise -->
		<section class="mb-16">
			<div class="bg-white dark:bg-gray-800 rounded-xl shadow-md p-8 transform hover:shadow-lg transition-shadow duration-300">
				<h2 class="text-2xl font-bold mb-6 text-gray-800 dark:text-white">Technologies maîtrisées</h2>
				<div class="space-y-6">
					{expertiseLevels.map(skill => (
						<div>
							<div class="flex justify-between items-center mb-1">
								<div class="flex items-center">
									<i class={`${skill.icon} mr-2 ${techColors[skill.name as keyof typeof techColors]?.text || 'text-gray-600'}`}></i>
									<span class="font-medium text-gray-700 dark:text-gray-200">{skill.name}</span>
								</div>
								<span class="text-sm text-gray-500 dark:text-gray-400">{skill.percentage}%</span>
							</div>
							<div class="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2.5">
								<div class={`h-2.5 rounded-full bg-gradient-to-r ${techColors[skill.name as keyof typeof techColors]?.gradient || 'from-indigo-500 to-indigo-700'}`} style={`width: ${skill.percentage}%`}></div>
							</div>
						</div>
					))}
				</div>
			</div>
		</section>
		
		<!-- Navigation entre domaines d'expertise -->
		<section class="mb-10">
			<h2 class="text-2xl font-bold mb-6 text-gray-800 dark:text-white">Explorer par domaine d'expertise</h2>
			<div class="flex overflow-x-auto pb-4 hide-scrollbar">
				<div class="flex space-x-2">
					{Object.keys(projectsByDomain).map(domain => (
						<a href={`#${domain.toLowerCase().replace(/[^\w]+/g, '-')}`} 
						   class={`px-4 py-2 rounded-full ${techColors[domain as keyof typeof techColors]?.bg || 'bg-gray-200 dark:bg-gray-700'} ${techColors[domain as keyof typeof techColors]?.text || 'text-gray-800 dark:text-gray-200'} whitespace-nowrap hover:shadow-md transition-all duration-300 flex items-center`}>
							<i class={`${techColors[domain as keyof typeof techColors]?.icon || 'fas fa-code'} mr-2`}></i>
							{domain}
						</a>
					))}
				</div>
			</div>
		</section>
		
		<!-- Projets par domaine d'expertise -->
		{Object.entries(projectsByDomain).map(([domain, domainProjects]) => (
			<section id={domain.toLowerCase().replace(/[^\w]+/g, '-')} class="mb-16 scroll-mt-20">
				<!-- Titre de section avec effet visuel -->
				<div class={`relative overflow-hidden rounded-xl mb-8 bg-gradient-to-r ${techColors[domain as keyof typeof techColors]?.gradient || 'from-purple-500 to-purple-700'} h-32`}>
					<div class="absolute inset-0 z-0 opacity-20">
						<div class="grid grid-cols-6 grid-rows-3 gap-1 h-full w-full">
							{Array.from({ length: 6 * 3 }).map((_, i) => (
								<div class="bg-white/5 rounded"></div>
							))}
						</div>
					</div>
					<div class="absolute inset-0 flex items-center">
						<div class="px-8 py-6 text-white">
							<h2 class="text-3xl font-bold text-white mb-1 flex items-center">
								<i class={`${techColors[domain as keyof typeof techColors]?.icon || 'fas fa-code'} mr-3`}></i>
								{domain}
							</h2>
							<p class="text-white/80">{domainProjects.length} projet{domainProjects.length > 1 ? 's' : ''}</p>
						</div>
					</div>
				</div>
				
				<!-- Projets -->
				<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
					{domainProjects.map(project => (
						<article class="group bg-white dark:bg-gray-800 rounded-xl shadow-md overflow-hidden flex flex-col h-full transform transition-all duration-500 hover:shadow-xl hover:-translate-y-2">
							<a href={`/work/${project.slug}`} class="block h-full">
								<!-- Image du projet avec badges -->
								<div class="relative h-56 overflow-hidden">
									{project.data.img ? (
										<img 
											src={project.data.img} 
											alt={project.data.img_alt || project.data.title} 
											class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-110"
										/>
									) : (
										<div class={`w-full h-full bg-gradient-to-r ${techColors[domain as keyof typeof techColors]?.gradient || 'from-purple-500 to-purple-700'} flex items-center justify-center`}>
											<h3 class="text-2xl font-bold text-white p-6 text-center">{project.data.title}</h3>
										</div>
									)}
									
									<!-- Badge date -->
									<div class="absolute top-3 right-3">
										<span class="px-3 py-1 rounded-full text-xs font-medium bg-black/50 text-white backdrop-blur-sm">
											{formatDate(project.data.publishDate)}
										</span>
									</div>
									
									<!-- Badge client si disponible -->
									{project.data.client && (
										<div class="absolute top-3 left-3">
											<span class="px-3 py-1 rounded-full text-xs font-medium bg-white/80 dark:bg-gray-800/80 text-gray-800 dark:text-gray-200 shadow-sm backdrop-blur-sm">
												{project.data.client}
											</span>
										</div>
									)}
									
									<!-- Gradient overlay for better text visibility -->
									<div class="absolute inset-0 bg-gradient-to-t from-black/70 via-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300">
										<div class="absolute bottom-4 left-4">
											<div class="text-white font-bold text-lg opacity-0 group-hover:opacity-100 transform group-hover:translate-y-0 translate-y-4 transition-all duration-300">
												Voir les détails
											</div>
										</div>
									</div>
								</div>
								
								<!-- Contenu -->
								<div class="p-6 flex flex-col flex-grow">
									<h3 class="text-xl font-bold mb-3 text-gray-800 dark:text-white group-hover:text-indigo-600 dark:group-hover:text-indigo-400 transition-colors">
										{project.data.title}
									</h3>
									
									<!-- Infos d'entreprise et période -->
									{(project.data.company || project.data.period) && (
										<div class="mb-3 flex flex-wrap items-center text-gray-600 dark:text-gray-400 text-sm space-y-1">
											{project.data.company && (
												<span class="mr-4 flex items-center">
													<i class="fas fa-building mr-1 text-indigo-500 dark:text-indigo-400"></i>
													{project.data.company}
												</span>
											)}
											{project.data.period && (
												<span class="flex items-center">
													<i class="fas fa-calendar mr-1 text-indigo-500 dark:text-indigo-400"></i>
													{project.data.period}
												</span>
											)}
										</div>
									)}
									
									<p class="text-gray-600 dark:text-gray-300 mb-6 flex-grow line-clamp-3">
										{project.data.description}
									</p>
									
									<!-- Technologies utilisées -->
									{project.data.technologies && project.data.technologies.length > 0 && (
										<div class="mt-auto">
											<div class="flex flex-wrap gap-2">
												{project.data.technologies.map((tech: string) => (
													<span class={`inline-block ${techColors[tech as keyof typeof techColors]?.bg || 'bg-indigo-100 dark:bg-indigo-900/30'} ${techColors[tech as keyof typeof techColors]?.text || 'text-indigo-800 dark:text-indigo-300'} text-xs px-2 py-1 rounded-full`}>
														{techColors[tech as keyof typeof techColors]?.icon && (
															<i class={`${techColors[tech as keyof typeof techColors]?.icon} mr-1`}></i>
														)}
														{tech}
													</span>
												))}
											</div>
										</div>
									)}
									
									<!-- Call to action -->
									<div class="mt-6 pt-4 border-t border-gray-100 dark:border-gray-700 flex justify-end">
										<span class="text-indigo-600 dark:text-indigo-400 inline-flex items-center font-medium group-hover:translate-x-1 transition-transform duration-300">
											Voir le projet
											<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
												<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
											</svg>
										</span>
									</div>
								</div>
							</a>
						</article>
					))}
				</div>
			</section>
		))}
		
		<!-- Call to Action -->
		<section class="mt-16">
			<CallToAction 
				title="Vous avez un projet en tête ?"
				description="Discutons ensemble de vos idées et voyons comment je peux vous aider à les réaliser."
				buttonText="Me contacter"
				buttonLink="/contact"
				buttonStyle="primary"
				icon="chat"
			/>
		</section>
	</main>
	
	<BackToTop />
</BaseLayout>

<style>
	.hide-scrollbar {
		-ms-overflow-style: none;
		scrollbar-width: none;
	}
	
	.hide-scrollbar::-webkit-scrollbar {
		display: none;
	}
	
	/* Animation pour les barres de compétences */
	@keyframes growProgressBar {
		0% { width: 0; }
	}
	
	[astro-island] .w-full > div {
		animation: growProgressBar 2s ease-out forwards;
	}
</style>

<!-- Script pour charger Font Awesome pour les icônes -->
<script defer is:inline>
  // Ajout de Font Awesome
  if (!document.querySelector('#font-awesome')) {
    const link = document.createElement('link');
    link.id = 'font-awesome';
    link.rel = 'stylesheet';
    link.href = 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css';
    document.head.appendChild(link);
  }
  
  // Animation pour les éléments au scroll
  document.addEventListener('DOMContentLoaded', () => {
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate-fade-in');
          observer.unobserve(entry.target);
        }
      });
    }, { threshold: 0.1 });
    
    document.querySelectorAll('section').forEach(section => {
      observer.observe(section);
    });
  });
</script>
